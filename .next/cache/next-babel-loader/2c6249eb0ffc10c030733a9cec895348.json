{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js\";\nimport React, { createContext, useContext } from 'react';\nexport const FunctionContext = /*#__PURE__*/createContext();\n\nconst ClearInstance = () => {\n  return fetch('api/del_carts_all').then();\n};\n\nconst GetAllCarts = (parmsuser, fnins, fnlen) => {\n  return fetch('api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    fnins(result.data);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    console.log('inslen in GetAllCartst: ', inslen);\n  }).catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, fnins, fnlen) => {\n  return fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    fnins(result.data);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    console.log('inslen in GetAllCartst: ', inslen);\n  }).catch(new Error());\n};\n\nconst FunctionContextProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(FunctionContext.Provider, {\n    value: {\n      GetAllCarts,\n      AddToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js"],"names":["React","createContext","useContext","FunctionContext","ClearInstance","fetch","then","GetAllCarts","parmsuser","fnins","fnlen","method","body","JSON","stringify","user","response","json","result","data","reducer","accumulator","currentValue","quantity","inslen","reduce","console","log","catch","Error","AddToCart","parmscount","parmsid","count","itemid","FunctionContextProvider","children","usefunctions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAArC;;AAEP,MAAMG,aAAa,GAAG,MAAM;AAC1B,SAAOC,KAAK,CAAC,mBAAD,CAAL,CAA2BC,IAA3B,EAAP;AACD,CAFD;;AAGA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,KAAnB,KAA6B;AAC/C,SAAOL,KAAK,CAAC,0BAAD,EAA6B;AACvCM,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,IAAI,EAAEP;AADa,KAAf;AAFiC,GAA7B,CAAL,CAMJF,IANI,CAMEU,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANf,EAOJX,IAPI,CAOEY,MAAD,IAAY;AAChBT,IAAAA,KAAK,CAACS,MAAM,CAACC,IAAR,CAAL;;AACA,UAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KACdD,WAAW,GAAGC,YAAY,CAACC,QAD7B;;AAEA,QAAIC,MAAM,GAAGN,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACC,IAAP,CAAYM,MAAZ,CAAmBL,OAAnB,EAA4B,CAA5B,CAAd,GAA+C,CAA5D;AAEAV,IAAAA,KAAK,CAACc,MAAD,CAAL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCH,MAAxC;AACD,GAfI,EAgBJI,KAhBI,CAgBE,IAAIC,KAAJ,EAhBF,CAAP;AAiBD,CAlBD;;AAoBA,MAAMC,SAAS,GAAG,CAACC,UAAD,EAAaC,OAAb,EAAsBxB,SAAtB,EAAiCC,KAAjC,EAAwCC,KAAxC,KAAkD;AAClE,SAAOL,KAAK,CAAC,0BAAD,EAA6B;AACvCM,IAAAA,MAAM,EAAE,MAD+B;AAEvCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBmB,MAAAA,KAAK,EAAEF,UADY;AAEnBG,MAAAA,MAAM,EAAEF,OAFW;AAGnBjB,MAAAA,IAAI,EAAEP;AAHa,KAAf;AAFiC,GAA7B,CAAL,CAQJF,IARI,CAQEU,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARf,EASJX,IATI,CASEY,MAAD,IAAY;AAChBT,IAAAA,KAAK,CAACS,MAAM,CAACC,IAAR,CAAL;;AACA,UAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KACdD,WAAW,GAAGC,YAAY,CAACC,QAD7B;;AAEA,QAAIC,MAAM,GAAGN,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACC,IAAP,CAAYM,MAAZ,CAAmBL,OAAnB,EAA4B,CAA5B,CAAd,GAA+C,CAA5D;AACAV,IAAAA,KAAK,CAACc,MAAD,CAAL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCH,MAAxC;AACD,GAhBI,EAiBJI,KAjBI,CAiBE,IAAIC,KAAJ,EAjBF,CAAP;AAkBD,CAnBD;;AAqBA,MAAMM,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAE7B,MAAAA,WAAF;AAAeuB,MAAAA;AAAf,KAAjC;AAAA,cACGM;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,OAAO,MAAMC,YAAY,GAAG,MAAMnC,UAAU,CAACC,eAAD,CAArC;AACP,eAAegC,uBAAf","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const FunctionContext = createContext();\n\nconst ClearInstance = () => {\n  return fetch('api/del_carts_all').then();\n};\nconst GetAllCarts = (parmsuser, fnins, fnlen) => {\n  return fetch('api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      fnins(result.data);\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n\n      fnlen(inslen);\n      console.log('inslen in GetAllCartst: ', inslen);\n    })\n    .catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, fnins, fnlen) => {\n  return fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      fnins(result.data);\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n      fnlen(inslen);\n      console.log('inslen in GetAllCartst: ', inslen);\n    })\n    .catch(new Error());\n};\n\nconst FunctionContextProvider = ({ children }) => {\n  return (\n    <FunctionContext.Provider value={{ GetAllCarts, AddToCart }}>\n      {children}\n    </FunctionContext.Provider>\n  );\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;\n"]},"metadata":{},"sourceType":"module"}