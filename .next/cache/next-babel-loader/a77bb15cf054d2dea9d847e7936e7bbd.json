{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js\";\nimport React, { createContext, useContext } from 'react';\nexport const FunctionContext = /*#__PURE__*/createContext();\n\nconst GetAllCarts = (parmsuser, howto) => {\n  return new Promise(() => fetch('api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    howto(result.data);\n  }).catch(new Error()));\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser) => {\n  console.log('parmsid: ', parmsid);\n  fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(data => {\n    console.log('data: ', data);\n  }).catch(new Error());\n};\n\nconst FunctionContextProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(FunctionContext.Provider, {\n    value: {\n      GetAllCarts,\n      AddToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js"],"names":["React","createContext","useContext","FunctionContext","GetAllCarts","parmsuser","howto","Promise","fetch","method","body","JSON","stringify","user","then","response","json","result","data","catch","Error","AddToCart","parmscount","parmsid","console","log","count","itemid","FunctionContextProvider","children","usefunctions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAArC;;AAEP,MAAMG,WAAW,GAAG,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACxC,SAAO,IAAIC,OAAJ,CAAY,MACjBC,KAAK,CAAC,0BAAD,EAA6B;AAChCC,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,IAAI,EAAER;AADa,KAAf;AAF0B,GAA7B,CAAL,CAMGS,IANH,CAMSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANtB,EAOGF,IAPH,CAOSG,MAAD,IAAY;AAChBX,IAAAA,KAAK,CAACW,MAAM,CAACC,IAAR,CAAL;AACD,GATH,EAUGC,KAVH,CAUS,IAAIC,KAAJ,EAVT,CADK,CAAP;AAaD,CAdD;;AAgBA,MAAMC,SAAS,GAAG,CAACC,UAAD,EAAaC,OAAb,EAAsBlB,SAAtB,KAAoC;AACpDmB,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,OAAzB;AACAf,EAAAA,KAAK,CAAC,0BAAD,EAA6B;AAChCC,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBc,MAAAA,KAAK,EAAEJ,UADY;AAEnBK,MAAAA,MAAM,EAAEJ,OAFW;AAGnBV,MAAAA,IAAI,EAAER;AAHa,KAAf;AAF0B,GAA7B,CAAL,CAQGS,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSI,IAAD,IAAU;AACdM,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,IAAtB;AACD,GAXH,EAYGC,KAZH,CAYS,IAAIC,KAAJ,EAZT;AAaD,CAfD;;AAiBA,MAAMQ,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEzB,MAAAA,WAAF;AAAeiB,MAAAA;AAAf,KAAjC;AAAA,cACGQ;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,OAAO,MAAMC,YAAY,GAAG,MAAM5B,UAAU,CAACC,eAAD,CAArC;AACP,eAAeyB,uBAAf","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const FunctionContext = createContext();\n\nconst GetAllCarts = (parmsuser, howto) => {\n  return new Promise(() =>\n    fetch('api/user_getallcart_post', {\n      method: 'post',\n      body: JSON.stringify({\n        user: parmsuser,\n      }),\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        howto(result.data);\n      })\n      .catch(new Error())\n  );\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser) => {\n  console.log('parmsid: ', parmsid);\n  fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log('data: ', data);\n    })\n    .catch(new Error());\n};\n\nconst FunctionContextProvider = ({ children }) => {\n  return (\n    <FunctionContext.Provider value={{ GetAllCarts, AddToCart }}>\n      {children}\n    </FunctionContext.Provider>\n  );\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;\n"]},"metadata":{},"sourceType":"module"}