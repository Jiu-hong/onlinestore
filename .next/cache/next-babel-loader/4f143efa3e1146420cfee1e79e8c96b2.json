{"ast":null,"code":"import ItemInstance from '../../models/iteminstance';\nimport dbConnect from '../../utils/dbConnect';\nexport const config = {\n  api: {\n    externalResolver: true\n  }\n};\nexport default async function handler(req, res) {\n  req.body = JSON.parse(req.body);\n  console.log('req.body: ', req.body);\n  await dbConnect(); //https://stackoverflow.com/questions/38439748/best-way-of-chaining-mongoose-queries\n\n  ItemInstance.findOneAndUpdate({\n    user: req.body.user,\n    status: 'Cart',\n    item: req.body.itemid\n  }, {\n    quantity: req.body.count,\n    buy_date: Date.now(),\n    check: true\n  }).then(res => {\n    if (res == null) {\n      var iteminstance = new ItemInstance({\n        item: req.body.itemid,\n        user: req.body.user,\n        quantity: req.body.count\n      });\n      console.log('I am after new iteminstance');\n      return iteminstance.save();\n    }\n  }).then(() => {\n    console.log('I am beofre find');\n    return ItemInstance.find({\n      user: req.body.user,\n      status: 'Cart'\n    }).populate('item');\n  }).then(items_carts => {\n    console.log('items_carts in user_addtocart_post: ', items_carts);\n    res.status(201).json({\n      data: items_carts\n    });\n    res.end();\n  }).catch(err => {\n    res.status(500).json({\n      error: err\n    });\n    res.end();\n  });\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/api/user_changetocart_post.js"],"names":["ItemInstance","dbConnect","config","api","externalResolver","handler","req","res","body","JSON","parse","console","log","findOneAndUpdate","user","status","item","itemid","quantity","count","buy_date","Date","now","check","then","iteminstance","save","find","populate","items_carts","json","data","end","catch","err","error"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAO,MAAMC,MAAM,GAAG;AACpBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,gBAAgB,EAAE;AADf;AADe,CAAf;AAMP,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9CD,EAAAA,GAAG,CAACE,IAAJ,GAAWC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACE,IAAf,CAAX;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,GAAG,CAACE,IAA9B;AACA,QAAMP,SAAS,EAAf,CAH8C,CAK9C;;AACAD,EAAAA,YAAY,CAACa,gBAAb,CACE;AAAEC,IAAAA,IAAI,EAAER,GAAG,CAACE,IAAJ,CAASM,IAAjB;AAAuBC,IAAAA,MAAM,EAAE,MAA/B;AAAuCC,IAAAA,IAAI,EAAEV,GAAG,CAACE,IAAJ,CAASS;AAAtD,GADF,EAEE;AAAEC,IAAAA,QAAQ,EAAEZ,GAAG,CAACE,IAAJ,CAASW,KAArB;AAA4BC,IAAAA,QAAQ,EAAEC,IAAI,CAACC,GAAL,EAAtC;AAAkDC,IAAAA,KAAK,EAAE;AAAzD,GAFF,EAIGC,IAJH,CAISjB,GAAD,IAAS;AACb,QAAIA,GAAG,IAAI,IAAX,EAAiB;AACf,UAAIkB,YAAY,GAAG,IAAIzB,YAAJ,CAAiB;AAClCgB,QAAAA,IAAI,EAAEV,GAAG,CAACE,IAAJ,CAASS,MADmB;AAElCH,QAAAA,IAAI,EAAER,GAAG,CAACE,IAAJ,CAASM,IAFmB;AAGlCI,QAAAA,QAAQ,EAAEZ,GAAG,CAACE,IAAJ,CAASW;AAHe,OAAjB,CAAnB;AAKAR,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,aAAOa,YAAY,CAACC,IAAb,EAAP;AACD;AACF,GAdH,EAeGF,IAfH,CAeQ,MAAM;AACVb,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WAAOZ,YAAY,CAAC2B,IAAb,CAAkB;AACvBb,MAAAA,IAAI,EAAER,GAAG,CAACE,IAAJ,CAASM,IADQ;AAEvBC,MAAAA,MAAM,EAAE;AAFe,KAAlB,EAGJa,QAHI,CAGK,MAHL,CAAP;AAID,GArBH,EAsBGJ,IAtBH,CAsBSK,WAAD,IAAiB;AACrBlB,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDiB,WAApD;AACAtB,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEC,MAAAA,IAAI,EAAEF;AAAR,KAArB;AACAtB,IAAAA,GAAG,CAACyB,GAAJ;AACD,GA1BH,EA2BGC,KA3BH,CA2BUC,GAAD,IAAS;AACd3B,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBe,IAAhB,CAAqB;AAAEK,MAAAA,KAAK,EAAED;AAAT,KAArB;AACA3B,IAAAA,GAAG,CAACyB,GAAJ;AACD,GA9BH;AA+BD","sourcesContent":["import ItemInstance from '../../models/iteminstance';\nimport dbConnect from '../../utils/dbConnect';\n\nexport const config = {\n  api: {\n    externalResolver: true,\n  },\n};\n\nexport default async function handler(req, res) {\n  req.body = JSON.parse(req.body);\n  console.log('req.body: ', req.body);\n  await dbConnect();\n\n  //https://stackoverflow.com/questions/38439748/best-way-of-chaining-mongoose-queries\n  ItemInstance.findOneAndUpdate(\n    { user: req.body.user, status: 'Cart', item: req.body.itemid },\n    { quantity: req.body.count, buy_date: Date.now(), check: true }\n  )\n    .then((res) => {\n      if (res == null) {\n        var iteminstance = new ItemInstance({\n          item: req.body.itemid,\n          user: req.body.user,\n          quantity: req.body.count,\n        });\n        console.log('I am after new iteminstance');\n        return iteminstance.save();\n      }\n    })\n    .then(() => {\n      console.log('I am beofre find');\n      return ItemInstance.find({\n        user: req.body.user,\n        status: 'Cart',\n      }).populate('item');\n    })\n    .then((items_carts) => {\n      console.log('items_carts in user_addtocart_post: ', items_carts);\n      res.status(201).json({ data: items_carts });\n      res.end();\n    })\n    .catch((err) => {\n      res.status(500).json({ error: err });\n      res.end();\n    });\n}\n"]},"metadata":{},"sourceType":"module"}