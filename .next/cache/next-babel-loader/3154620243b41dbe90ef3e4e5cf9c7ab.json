{"ast":null,"code":"import Item from '../../models/item';\nimport dbConnect from '../../utils/dbConnect';\nimport formidable from 'formidable';\nimport fs from 'fs';\nimport validator from 'validator';\nexport const config = {\n  api: {\n    externalResolver: true,\n    bodyParser: false\n  }\n};\nexport default async function handler(req, res) {\n  const form = formidable({\n    multiples: true\n  });\n  var filearray = [];\n  var title, validatedtitle, owner, validatedowner, quantity, validatedquantity, price, validatedprice, introduction, validatedintroduction, file;\n  var errors = [];\n  await dbConnect();\n  form.parse(req, (err, fields, files) => {\n    if (err) {\n      res.json(err);\n      return;\n    }\n\n    title = fields.title;\n    owner = fields.owner;\n    quantity = fields.quantity;\n    price = fields.price;\n    introduction = fields.introduction;\n    file = files.itemattach;\n    console.log('title: ', title);\n    console.log('owner: ', owner);\n    console.log('quantity: ', quantity);\n    console.log('price: ', price);\n    console.log('introduction: ', introduction); // validator text\n\n    if (!validator.isLength(validator.trim(title), {\n      min: 2,\n      max: 25\n    })) {\n      errors.push(' The title length should be 1 - 25 length');\n    } else {\n      console.log('I am in validate title');\n      validatedtitle = validator.escape(validator.trim(title));\n    }\n\n    if (validator.isEmpty(validator.trim(owner))) {\n      errors.push(' The owner is empty');\n    } else {\n      console.log('I am in validate owner');\n      validatedowner = validator.escape(validator.trim(owner));\n    }\n\n    if (validator.isEmpty(validator.trim(quantity))) {\n      errors.push(' The quantity is empty');\n    } else {\n      if (validator.isInt(validator.trim(quantity))) {\n        console.log('I am in validate quantity');\n        validatedquantity = validator.escape(validator.trim(quantity));\n      } else {\n        errors.push(' The quantity is NOT integer');\n      }\n    }\n\n    if (validator.isEmpty(validator.trim(price))) {\n      errors.push(' The price is empty');\n    } else {\n      if (validator.isFloat(validator.trim(price))) {\n        console.log('I am in validate price');\n        validatedprice = validator.escape(validator.trim(price));\n      } else {\n        errors.push(' The price is NOT Float');\n      }\n    }\n\n    if (validator.isEmpty(validator.trim(introduction))) {\n      errors.push(' The introduction is empty');\n    } else {\n      if (validator.isLength(validator.trim(introduction), {\n        min: 20,\n        max: 300\n      })) {\n        console.log('I am in validate introduction');\n        validatedintroduction = validator.escape(validator.trim(introduction));\n      } else {\n        console.log('validator.trim(introduction): ', validator.trim(introduction).length);\n        errors.push(' The introduction length should be 20 - 300 length');\n      }\n    }\n\n    if (errors.length > 0) {\n      console.log('errors in owner_updateitem_post.js: ', errors);\n      res.status(500).json({\n        error: errors,\n        status: 500\n      });\n      res.end();\n      return;\n    }\n\n    console.log('I am before handle files'); // fields.textarea -> send to comment\n\n    var oldPath, newPath;\n\n    if (file.length) {\n      // var filestodb = [];\n      for (let i = 0; i < file.length; i++) {\n        oldPath = file[i].path;\n        newPath = 'public/item/' + file[i].name;\n        fs.renameSync(oldPath, newPath);\n        newPath = '/' + newPath.split('/').slice(1).join('/');\n        console.log('newPath name: ', newPath);\n        filearray.push(newPath); //file to db;\n      }\n    } else {\n      if (file.size !== 0) {\n        oldPath = file.path;\n        newPath = 'public/item/' + file.name;\n        fs.renameSync(oldPath, newPath);\n        newPath = '/' + newPath.split('/').slice(1).join('/');\n        console.log('newPath name: ', newPath);\n        filearray.push(newPath); //file to db\n      } else {\n        console.log('no file');\n      }\n    }\n\n    var item = new Item({\n      title: validatedtitle,\n      owner: validatedowner,\n      quantity: validatedquantity,\n      price: validatedprice,\n      image: filearray,\n      introduction: validatedintroduction\n    });\n    item.save().then(item => {\n      console.log('item: ', item);\n      res.status(201).json({\n        data: item\n      });\n      res.end();\n    }).catch(err => {\n      console.log('err: ', err);\n      res.status(500).json({\n        error: err\n      });\n      res.end();\n    });\n  });\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/api/owner_createitem_post.js"],"names":["Item","dbConnect","formidable","fs","validator","config","api","externalResolver","bodyParser","handler","req","res","form","multiples","filearray","title","validatedtitle","owner","validatedowner","quantity","validatedquantity","price","validatedprice","introduction","validatedintroduction","file","errors","parse","err","fields","files","json","itemattach","console","log","isLength","trim","min","max","push","escape","isEmpty","isInt","isFloat","length","status","error","end","oldPath","newPath","i","path","name","renameSync","split","slice","join","size","item","image","save","then","data","catch"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,GAAG,EAAE;AACDC,IAAAA,gBAAgB,EAAE,IADjB;AAEDC,IAAAA,UAAU,EAAE;AAFX;AADa,CAAf;AAOP,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5C,QAAMC,IAAI,GAAGV,UAAU,CAAC;AAAEW,IAAAA,SAAS,EAAE;AAAb,GAAD,CAAvB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,KAAJ,EACIC,cADJ,EAEIC,KAFJ,EAGIC,cAHJ,EAIIC,QAJJ,EAKIC,iBALJ,EAMIC,KANJ,EAOIC,cAPJ,EAQIC,YARJ,EASIC,qBATJ,EAUIC,IAVJ;AAWA,MAAIC,MAAM,GAAG,EAAb;AACA,QAAMzB,SAAS,EAAf;AAEAW,EAAAA,IAAI,CAACe,KAAL,CAAWjB,GAAX,EAAgB,CAACkB,GAAD,EAAMC,MAAN,EAAcC,KAAd,KAAwB;AACpC,QAAIF,GAAJ,EAAS;AACLjB,MAAAA,GAAG,CAACoB,IAAJ,CAASH,GAAT;AACA;AACH;;AAEDb,IAAAA,KAAK,GAAGc,MAAM,CAACd,KAAf;AACAE,IAAAA,KAAK,GAAGY,MAAM,CAACZ,KAAf;AACAE,IAAAA,QAAQ,GAAGU,MAAM,CAACV,QAAlB;AACAE,IAAAA,KAAK,GAAGQ,MAAM,CAACR,KAAf;AACAE,IAAAA,YAAY,GAAGM,MAAM,CAACN,YAAtB;AACAE,IAAAA,IAAI,GAAGK,KAAK,CAACE,UAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBnB,KAAvB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBjB,KAAvB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bf,QAA1B;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBb,KAAvB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BX,YAA9B,EAhBoC,CAiBpC;;AAEA,QAAI,CAACnB,SAAS,CAAC+B,QAAV,CAAmB/B,SAAS,CAACgC,IAAV,CAAerB,KAAf,CAAnB,EAA0C;AAAEsB,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE;AAAf,KAA1C,CAAL,EAAqE;AACjEZ,MAAAA,MAAM,CAACa,IAAP,CAAY,2CAAZ;AACH,KAFD,MAEO;AACHN,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAlB,MAAAA,cAAc,GAAGZ,SAAS,CAACoC,MAAV,CAAiBpC,SAAS,CAACgC,IAAV,CAAerB,KAAf,CAAjB,CAAjB;AACH;;AAED,QAAIX,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACgC,IAAV,CAAenB,KAAf,CAAlB,CAAJ,EAA8C;AAC1CS,MAAAA,MAAM,CAACa,IAAP,CAAY,qBAAZ;AACH,KAFD,MAEO;AACHN,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAhB,MAAAA,cAAc,GAAGd,SAAS,CAACoC,MAAV,CAAiBpC,SAAS,CAACgC,IAAV,CAAenB,KAAf,CAAjB,CAAjB;AACH;;AAED,QAAIb,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACgC,IAAV,CAAejB,QAAf,CAAlB,CAAJ,EAAiD;AAC7CO,MAAAA,MAAM,CAACa,IAAP,CAAY,wBAAZ;AACH,KAFD,MAEO;AACH,UAAInC,SAAS,CAACsC,KAAV,CAAgBtC,SAAS,CAACgC,IAAV,CAAejB,QAAf,CAAhB,CAAJ,EAA+C;AAC3Cc,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAd,QAAAA,iBAAiB,GAAGhB,SAAS,CAACoC,MAAV,CAAiBpC,SAAS,CAACgC,IAAV,CAAejB,QAAf,CAAjB,CAApB;AACH,OAHD,MAGO;AACHO,QAAAA,MAAM,CAACa,IAAP,CAAY,8BAAZ;AACH;AACJ;;AAED,QAAInC,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACgC,IAAV,CAAef,KAAf,CAAlB,CAAJ,EAA8C;AAC1CK,MAAAA,MAAM,CAACa,IAAP,CAAY,qBAAZ;AACH,KAFD,MAEO;AACH,UAAInC,SAAS,CAACuC,OAAV,CAAkBvC,SAAS,CAACgC,IAAV,CAAef,KAAf,CAAlB,CAAJ,EAA8C;AAC1CY,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAZ,QAAAA,cAAc,GAAGlB,SAAS,CAACoC,MAAV,CAAiBpC,SAAS,CAACgC,IAAV,CAAef,KAAf,CAAjB,CAAjB;AACH,OAHD,MAGO;AACHK,QAAAA,MAAM,CAACa,IAAP,CAAY,yBAAZ;AACH;AACJ;;AAED,QAAInC,SAAS,CAACqC,OAAV,CAAkBrC,SAAS,CAACgC,IAAV,CAAeb,YAAf,CAAlB,CAAJ,EAAqD;AACjDG,MAAAA,MAAM,CAACa,IAAP,CAAY,4BAAZ;AACH,KAFD,MAEO;AACH,UACInC,SAAS,CAAC+B,QAAV,CAAmB/B,SAAS,CAACgC,IAAV,CAAeb,YAAf,CAAnB,EAAiD;AAC7Cc,QAAAA,GAAG,EAAE,EADwC;AAE7CC,QAAAA,GAAG,EAAE;AAFwC,OAAjD,CADJ,EAKE;AACEL,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAV,QAAAA,qBAAqB,GAAGpB,SAAS,CAACoC,MAAV,CACpBpC,SAAS,CAACgC,IAAV,CAAeb,YAAf,CADoB,CAAxB;AAGH,OAVD,MAUO;AACHU,QAAAA,OAAO,CAACC,GAAR,CACI,gCADJ,EAEI9B,SAAS,CAACgC,IAAV,CAAeb,YAAf,EAA6BqB,MAFjC;AAIAlB,QAAAA,MAAM,CAACa,IAAP,CACI,oDADJ;AAGH;AACJ;;AAED,QAAIb,MAAM,CAACkB,MAAP,GAAgB,CAApB,EAAuB;AACnBX,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDR,MAApD;AACAf,MAAAA,GAAG,CAACkC,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB;AAAEe,QAAAA,KAAK,EAAEpB,MAAT;AAAiBmB,QAAAA,MAAM,EAAE;AAAzB,OAArB;AACAlC,MAAAA,GAAG,CAACoC,GAAJ;AACA;AACH;;AAEDd,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAtFoC,CAuFpC;;AACA,QAAIc,OAAJ,EAAaC,OAAb;;AACA,QAAIxB,IAAI,CAACmB,MAAT,EAAiB;AACb;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,IAAI,CAACmB,MAAzB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCF,QAAAA,OAAO,GAAGvB,IAAI,CAACyB,CAAD,CAAJ,CAAQC,IAAlB;AACAF,QAAAA,OAAO,GAAG,iBAAiBxB,IAAI,CAACyB,CAAD,CAAJ,CAAQE,IAAnC;AAEAjD,QAAAA,EAAE,CAACkD,UAAH,CAAcL,OAAd,EAAuBC,OAAvB;AACAA,QAAAA,OAAO,GAAG,MAAMA,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmBC,KAAnB,CAAyB,CAAzB,EAA4BC,IAA5B,CAAiC,GAAjC,CAAhB;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Be,OAA9B;AACAnC,QAAAA,SAAS,CAACyB,IAAV,CAAeU,OAAf,EAPkC,CAOT;AAC5B;AACJ,KAXD,MAWO;AACH,UAAIxB,IAAI,CAACgC,IAAL,KAAc,CAAlB,EAAqB;AACjBT,QAAAA,OAAO,GAAGvB,IAAI,CAAC0B,IAAf;AACAF,QAAAA,OAAO,GAAG,iBAAiBxB,IAAI,CAAC2B,IAAhC;AACAjD,QAAAA,EAAE,CAACkD,UAAH,CAAcL,OAAd,EAAuBC,OAAvB;AACAA,QAAAA,OAAO,GAAG,MAAMA,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmBC,KAAnB,CAAyB,CAAzB,EAA4BC,IAA5B,CAAiC,GAAjC,CAAhB;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Be,OAA9B;AACAnC,QAAAA,SAAS,CAACyB,IAAV,CAAeU,OAAf,EANiB,CAMQ;AAC5B,OAPD,MAOO;AACHhB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;AACJ;;AAED,QAAIwB,IAAI,GAAG,IAAI1D,IAAJ,CAAS;AAChBe,MAAAA,KAAK,EAAEC,cADS;AAEhBC,MAAAA,KAAK,EAAEC,cAFS;AAGhBC,MAAAA,QAAQ,EAAEC,iBAHM;AAIhBC,MAAAA,KAAK,EAAEC,cAJS;AAKhBqC,MAAAA,KAAK,EAAE7C,SALS;AAMhBS,MAAAA,YAAY,EAAEC;AANE,KAAT,CAAX;AASAkC,IAAAA,IAAI,CAACE,IAAL,GACKC,IADL,CACWH,IAAD,IAAU;AACZzB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBwB,IAAtB;AACA/C,MAAAA,GAAG,CAACkC,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB;AAAE+B,QAAAA,IAAI,EAAEJ;AAAR,OAArB;AACA/C,MAAAA,GAAG,CAACoC,GAAJ;AACH,KALL,EAMKgB,KANL,CAMYnC,GAAD,IAAS;AACZK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,GAArB;AACAjB,MAAAA,GAAG,CAACkC,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB;AAAEe,QAAAA,KAAK,EAAElB;AAAT,OAArB;AACAjB,MAAAA,GAAG,CAACoC,GAAJ;AACH,KAVL;AAWH,GArID;AAsIH","sourcesContent":["import Item from '../../models/item';\nimport dbConnect from '../../utils/dbConnect';\n\nimport formidable from 'formidable';\nimport fs from 'fs';\n\nimport validator from 'validator';\n\nexport const config = {\n    api: {\n        externalResolver: true,\n        bodyParser: false,\n    },\n};\n\nexport default async function handler(req, res) {\n    const form = formidable({ multiples: true });\n    var filearray = [];\n    var title,\n        validatedtitle,\n        owner,\n        validatedowner,\n        quantity,\n        validatedquantity,\n        price,\n        validatedprice,\n        introduction,\n        validatedintroduction,\n        file;\n    var errors = [];\n    await dbConnect();\n\n    form.parse(req, (err, fields, files) => {\n        if (err) {\n            res.json(err);\n            return;\n        }\n\n        title = fields.title;\n        owner = fields.owner;\n        quantity = fields.quantity;\n        price = fields.price;\n        introduction = fields.introduction;\n        file = files.itemattach;\n        console.log('title: ', title);\n        console.log('owner: ', owner);\n        console.log('quantity: ', quantity);\n        console.log('price: ', price);\n        console.log('introduction: ', introduction);\n        // validator text\n\n        if (!validator.isLength(validator.trim(title), { min: 2, max: 25 })) {\n            errors.push(' The title length should be 1 - 25 length');\n        } else {\n            console.log('I am in validate title');\n            validatedtitle = validator.escape(validator.trim(title));\n        }\n\n        if (validator.isEmpty(validator.trim(owner))) {\n            errors.push(' The owner is empty');\n        } else {\n            console.log('I am in validate owner');\n            validatedowner = validator.escape(validator.trim(owner));\n        }\n\n        if (validator.isEmpty(validator.trim(quantity))) {\n            errors.push(' The quantity is empty');\n        } else {\n            if (validator.isInt(validator.trim(quantity))) {\n                console.log('I am in validate quantity');\n                validatedquantity = validator.escape(validator.trim(quantity));\n            } else {\n                errors.push(' The quantity is NOT integer');\n            }\n        }\n\n        if (validator.isEmpty(validator.trim(price))) {\n            errors.push(' The price is empty');\n        } else {\n            if (validator.isFloat(validator.trim(price))) {\n                console.log('I am in validate price');\n                validatedprice = validator.escape(validator.trim(price));\n            } else {\n                errors.push(' The price is NOT Float');\n            }\n        }\n\n        if (validator.isEmpty(validator.trim(introduction))) {\n            errors.push(' The introduction is empty');\n        } else {\n            if (\n                validator.isLength(validator.trim(introduction), {\n                    min: 20,\n                    max: 300,\n                })\n            ) {\n                console.log('I am in validate introduction');\n                validatedintroduction = validator.escape(\n                    validator.trim(introduction)\n                );\n            } else {\n                console.log(\n                    'validator.trim(introduction): ',\n                    validator.trim(introduction).length\n                );\n                errors.push(\n                    ' The introduction length should be 20 - 300 length'\n                );\n            }\n        }\n\n        if (errors.length > 0) {\n            console.log('errors in owner_updateitem_post.js: ', errors);\n            res.status(500).json({ error: errors, status: 500 });\n            res.end();\n            return;\n        }\n\n        console.log('I am before handle files');\n        // fields.textarea -> send to comment\n        var oldPath, newPath;\n        if (file.length) {\n            // var filestodb = [];\n            for (let i = 0; i < file.length; i++) {\n                oldPath = file[i].path;\n                newPath = 'public/item/' + file[i].name;\n\n                fs.renameSync(oldPath, newPath);\n                newPath = '/' + newPath.split('/').slice(1).join('/');\n                console.log('newPath name: ', newPath);\n                filearray.push(newPath); //file to db;\n            }\n        } else {\n            if (file.size !== 0) {\n                oldPath = file.path;\n                newPath = 'public/item/' + file.name;\n                fs.renameSync(oldPath, newPath);\n                newPath = '/' + newPath.split('/').slice(1).join('/');\n                console.log('newPath name: ', newPath);\n                filearray.push(newPath); //file to db\n            } else {\n                console.log('no file');\n            }\n        }\n\n        var item = new Item({\n            title: validatedtitle,\n            owner: validatedowner,\n            quantity: validatedquantity,\n            price: validatedprice,\n            image: filearray,\n            introduction: validatedintroduction,\n        });\n\n        item.save()\n            .then((item) => {\n                console.log('item: ', item);\n                res.status(201).json({ data: item });\n                res.end();\n            })\n            .catch((err) => {\n                console.log('err: ', err);\n                res.status(500).json({ error: err });\n                res.end();\n            });\n    });\n}\n"]},"metadata":{},"sourceType":"module"}