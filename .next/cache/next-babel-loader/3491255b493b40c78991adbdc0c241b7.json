{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/* This is a database connection function*/\nimport mongoose from 'mongoose';\nvar connection = {};\n/* creating connection object*/\n\nfunction dbConnect() {\n  return _dbConnect.apply(this, arguments);\n}\n\nfunction _dbConnect() {\n  _dbConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var db;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!connection.isConnected) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            _context.next = 4;\n            return mongoose.connect(process.env.MONGODB_URI, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true,\n              useFindAndModify: false\n            });\n\n          case 4:\n            db = _context.sent;\n            connection.isConnected = db.connections[0].readyState;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _dbConnect.apply(this, arguments);\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/utils/dbConnect.js"],"names":["mongoose","connection","dbConnect","isConnected","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","useFindAndModify","db","connections","readyState"],"mappings":";;;AAAA;AACA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,UAAU,GAAG,EAAnB;AAAsB;;SAEPC,S;;;;;wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEMD,UAAU,CAACE,WAFjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,mBAOmBH,QAAQ,CAACI,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,WAA7B,EAA0C;AACzDC,cAAAA,eAAe,EAAE,IADwC;AAEzDC,cAAAA,kBAAkB,EAAE,IAFqC;AAGzDC,cAAAA,gBAAgB,EAAE;AAHuC,aAA1C,CAPnB;;AAAA;AAOQC,YAAAA,EAPR;AAaEV,YAAAA,UAAU,CAACE,WAAX,GAAyBQ,EAAE,CAACC,WAAH,CAAe,CAAf,EAAkBC,UAA3C;;AAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBA,eAAeX,SAAf","sourcesContent":["/* This is a database connection function*/\nimport mongoose from 'mongoose'\n\nconst connection = {} /* creating connection object*/\n\nasync function dbConnect() {\n  /* check if we have connection to our databse*/\n  if (connection.isConnected) {\n    return\n  }\n\n  /* connecting to our database */\n  const db = await mongoose.connect(process.env.MONGODB_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useFindAndModify: false,\n  })\n\n  connection.isConnected = db.connections[0].readyState\n}\n\nexport default dbConnect\n"]},"metadata":{},"sourceType":"module"}