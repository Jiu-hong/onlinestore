{"ast":null,"code":"import ItemInstance from '../../models/iteminstance';\nimport dbConnect from '../../utils/dbConnect';\nimport formidable from 'formidable';\nimport fs from 'fs';\nexport const config = {\n  api: {\n    externalResolver: true,\n    bodyParser: false\n  }\n};\nexport default async function handler(req, res) {\n  const form = formidable({\n    multiples: true\n  });\n  var filearray = [];\n  var singlefile, text, insid;\n  form.parse(req, (err, fields, files) => {\n    if (err) {\n      res.json(err);\n      return;\n    }\n\n    console.log('files: ', files);\n    console.log('fields:', fields);\n    text = fields.textarea;\n    insid = fields.insid; // fields.textarea -> send to comment\n\n    var oldPath, newPath;\n\n    if (files.commentattach.length) {\n      // var filestodb = [];\n      for (let i = 0; i < files.commentattach.length; i++) {\n        oldPath = files.commentattach[i].path;\n        newPath = 'uploadsnew/' + files.commentattach[i].name;\n        fs.renameSync(oldPath, newPath);\n        console.log('Successfully renamed - AKA moved!');\n        filearray.push(newPath); //file to db;\n\n        /*   fs.rename(oldPath, newPath, function (err) {\n            if (err) throw err;\n            console.log('Successfully renamed - AKA moved!');\n            filearray.push(newPath); //file to db;\n        });*/\n      }\n\n      console.log('filearray : ', filearray);\n    } else {\n      oldPath = files.commentattach.path;\n      newPath = 'uploadsnew/' + files.commentattach.name;\n      fs.renameSync(oldPath, newPath);\n      console.log('Successfully renamed - AKA moved!');\n      filearray.push(newPath); //file to db\n\n      console.log('filearray: ', filearray);\n      /* fs.rename(oldPath, newPath, function (err) {\n          if (err) throw err;\n          console.log('Successfully renamed - AKA moved!');\n          filestodb = newPath; //file to db\n          console.log('filestodb single: ', filestodb);\n      });*/\n    }\n  });\n  await dbConnect();\n  ItemInstance.findByIdAndUpdate(insid, {\n    commenttext: text,\n    commentimage: filearray\n  }).then(items_comment => {\n    console.log('I am here after update comment: ', items_comment);\n    res.status(201).json({\n      data: items_comment\n    });\n    res.end();\n  }).catch(err => {\n    console.log('I am in err: ', err);\n    res.status(500).json({\n      error: err\n    });\n    res.end();\n  });\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/api/user_comment_post.js"],"names":["ItemInstance","dbConnect","formidable","fs","config","api","externalResolver","bodyParser","handler","req","res","form","multiples","filearray","singlefile","text","insid","parse","err","fields","files","json","console","log","textarea","oldPath","newPath","commentattach","length","i","path","name","renameSync","push","findByIdAndUpdate","commenttext","commentimage","then","items_comment","status","data","end","catch","error"],"mappings":"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","sourcesContent":["import ItemInstance from '../../models/iteminstance';\nimport dbConnect from '../../utils/dbConnect';\n\nimport formidable from 'formidable';\nimport fs from 'fs';\n\nexport const config = {\n    api: {\n        externalResolver: true,\n        bodyParser: false,\n    },\n};\n\nexport default async function handler(req, res) {\n    const form = formidable({ multiples: true });\n    var filearray = [];\n    var singlefile, text, insid;\n    form.parse(req, (err, fields, files) => {\n        if (err) {\n            res.json(err);\n            return;\n        }\n\n        console.log('files: ', files);\n        console.log('fields:', fields);\n        text = fields.textarea;\n        insid = fields.insid;\n        // fields.textarea -> send to comment\n        var oldPath, newPath;\n        if (files.commentattach.length) {\n            // var filestodb = [];\n            for (let i = 0; i < files.commentattach.length; i++) {\n                oldPath = files.commentattach[i].path;\n                newPath = 'uploadsnew/' + files.commentattach[i].name;\n\n                fs.renameSync(oldPath, newPath);\n                console.log('Successfully renamed - AKA moved!');\n                filearray.push(newPath); //file to db;\n                /*   fs.rename(oldPath, newPath, function (err) {\n                    if (err) throw err;\n                    console.log('Successfully renamed - AKA moved!');\n                    filearray.push(newPath); //file to db;\n                });*/\n            }\n            console.log('filearray : ', filearray);\n        } else {\n            oldPath = files.commentattach.path;\n            newPath = 'uploadsnew/' + files.commentattach.name;\n            fs.renameSync(oldPath, newPath);\n            console.log('Successfully renamed - AKA moved!');\n            filearray.push(newPath); //file to db\n            console.log('filearray: ', filearray);\n            /* fs.rename(oldPath, newPath, function (err) {\n                if (err) throw err;\n                console.log('Successfully renamed - AKA moved!');\n                filestodb = newPath; //file to db\n                console.log('filestodb single: ', filestodb);\n            });*/\n        }\n    });\n\n    await dbConnect();\n    ItemInstance.findByIdAndUpdate(insid, {\n        commenttext: text,\n        commentimage: filearray,\n    })\n        .then((items_comment) => {\n            console.log('I am here after update comment: ', items_comment);\n            res.status(201).json({ data: items_comment });\n            res.end();\n        })\n        .catch((err) => {\n            console.log('I am in err: ', err);\n            res.status(500).json({ error: err });\n            res.end();\n        });\n}\n"]},"metadata":{},"sourceType":"module"}