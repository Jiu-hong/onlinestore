{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js\",\n    _s = $RefreshSig$();\n\nimport styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react'; //import Layout from '../components/layout';\n\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nexport default function About() {\n  _s();\n\n  var _useState = useState(null),\n      images = _useState[0],\n      setImages = _useState[1];\n\n  useEffect(function () {\n    var shouldCancel = false;\n    fetch('https://google-photos-album-demo2.glitch.me/4eXXxxG3rYwQVf948').then(function (response) {\n      var reader = response.body.getReader();\n      var stream = new ReadableStream({\n        start: function start(controller) {\n          function push() {\n            reader.read().then(function (_ref) {\n              var done = _ref.done,\n                  value = _ref.value;\n\n              if (done) {\n                controller.close();\n                return;\n              }\n\n              controller.enqueue(value);\n              push();\n            });\n          }\n\n          push();\n        }\n      });\n      console.log('response: ', response);\n      response.json();\n    });\n    /* if (!shouldCancel && response.data && response.data.length > 0) {\n            setImages(\n                response.data.map((url) => ({\n                    original: `${url}=w1024`,\n                    thumbnail: `${url}=w100`,\n                }))\n            );\n        }*/\n\n    return function () {\n      return shouldCancel = true;\n    };\n  }, []);\n  return images ? /*#__PURE__*/_jsxDEV(ImageGallery, {\n    items: images\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this) : null;\n}\n\n_s(About, \"1vh5OZMc1B9DNsrOB9lCRib8LTI=\");\n\n_c = About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js"],"names":["styles","useState","useEffect","ImageGallery","About","images","setImages","shouldCancel","fetch","then","response","reader","body","getReader","stream","ReadableStream","start","controller","push","read","done","value","close","enqueue","console","log","json"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,kDAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACAH,QAAQ,CAAC,IAAD,CADR;AAAA,MACrBI,MADqB;AAAA,MACbC,SADa;;AAG5BJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,YAAY,GAAG,KAAnB;AAEAC,IAAAA,KAAK,CACD,+DADC,CAAL,CAEEC,IAFF,CAEO,UAACC,QAAD,EAAc;AACjB,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,SAAd,EAAf;AACA,UAAMC,MAAM,GAAG,IAAIC,cAAJ,CAAmB;AAC9BC,QAAAA,KAD8B,iBACxBC,UADwB,EACZ;AACd,mBAASC,IAAT,GAAgB;AACZP,YAAAA,MAAM,CAACQ,IAAP,GAAcV,IAAd,CAAmB,gBAAqB;AAAA,kBAAlBW,IAAkB,QAAlBA,IAAkB;AAAA,kBAAZC,KAAY,QAAZA,KAAY;;AACpC,kBAAID,IAAJ,EAAU;AACNH,gBAAAA,UAAU,CAACK,KAAX;AACA;AACH;;AACDL,cAAAA,UAAU,CAACM,OAAX,CAAmBF,KAAnB;AACAH,cAAAA,IAAI;AACP,aAPD;AAQH;;AACDA,UAAAA,IAAI;AACP;AAb6B,OAAnB,CAAf;AAgBAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bf,QAA1B;AACAA,MAAAA,QAAQ,CAACgB,IAAT;AACH,KAtBD;AAwBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,WAAO;AAAA,aAAOnB,YAAY,GAAG,IAAtB;AAAA,KAAP;AACH,GArCQ,EAqCN,EArCM,CAAT;AAuCA,SAAOF,MAAM,gBAAG,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAH,GAAqC,IAAlD;AACH;;GA3CuBD,K;;KAAAA,K","sourcesContent":["import styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react';\n\n//import Layout from '../components/layout';\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\n\nexport default function About() {\n    const [images, setImages] = useState(null);\n\n    useEffect(() => {\n        let shouldCancel = false;\n\n        fetch(\n            'https://google-photos-album-demo2.glitch.me/4eXXxxG3rYwQVf948'\n        ).then((response) => {\n            const reader = response.body.getReader();\n            const stream = new ReadableStream({\n                start(controller) {\n                    function push() {\n                        reader.read().then(({ done, value }) => {\n                            if (done) {\n                                controller.close();\n                                return;\n                            }\n                            controller.enqueue(value);\n                            push();\n                        });\n                    }\n                    push();\n                },\n            });\n\n            console.log('response: ', response);\n            response.json();\n        });\n\n        /* if (!shouldCancel && response.data && response.data.length > 0) {\n                setImages(\n                    response.data.map((url) => ({\n                        original: `${url}=w1024`,\n                        thumbnail: `${url}=w100`,\n                    }))\n                );\n            }*/\n\n        return () => (shouldCancel = true);\n    }, []);\n\n    return images ? <ImageGallery items={images} /> : null;\n}\n"]},"metadata":{},"sourceType":"module"}