{"ast":null,"code":"import ItemInstance from '../../models/iteminstance';\nimport dbConnect from '../../utils/dbConnect';\nimport validator from 'validator';\nexport const config = {\n  api: {\n    externalResolver: true\n  }\n};\nexport default async function handler(req, res) {\n  req.body = JSON.parse(req.body);\n  console.log('req.body: ', req.body);\n  var errors = [];\n  var validateduser;\n  await dbConnect();\n\n  if (validator.isEmpty(validator.trim(req.body.user))) {\n    errors.push(' The user is empty');\n  } else {\n    validateduser = validator.escape(validator.trim(req.body.user));\n  }\n\n  if (errors.length > 0) {\n    res.status(500).json({\n      error: errors,\n      status: 500\n    });\n    res.end();\n    return;\n  }\n\n  ItemInstance.find({\n    user: validateduser,\n    status: 'Checkout'\n  }).populate('item').then(items_order => {\n    // console.log('items_order in user_order_post: ', items_order);\n    function groupBy(objectArray, property) {\n      return objectArray.reduce(function (acc, obj) {\n        let key = obj[property];\n\n        if (!acc[key]) {\n          acc[key] = [];\n        }\n\n        acc[key].push(obj);\n        return acc;\n      }, {});\n    }\n\n    var groupeditems_order = Object.entries(groupBy(items_order, 'ordernumber'));\n    console.log('groupeditems_order in user_order_post: ', groupeditems_order); // console.log('items_order: ', items_order);\n\n    res.status(201).json({\n      status: 201,\n      data: groupeditems_order\n    });\n    res.end();\n  }).catch(err => {\n    res.status(500).json({\n      status: 500,\n      error: err\n    });\n    res.end();\n  });\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/api/user_order_post.js"],"names":["ItemInstance","dbConnect","validator","config","api","externalResolver","handler","req","res","body","JSON","parse","console","log","errors","validateduser","isEmpty","trim","user","push","escape","length","status","json","error","end","find","populate","then","items_order","groupBy","objectArray","property","reduce","acc","obj","key","groupeditems_order","Object","entries","data","catch","err"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,GAAG,EAAE;AACDC,IAAAA,gBAAgB,EAAE;AADjB;AADa,CAAf;AAMP,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5CD,EAAAA,GAAG,CAACE,IAAJ,GAAWC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACE,IAAf,CAAX;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BN,GAAG,CAACE,IAA9B;AACA,MAAIK,MAAM,GAAG,EAAb;AACA,MAAIC,aAAJ;AACA,QAAMd,SAAS,EAAf;;AAEA,MAAIC,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,IAAV,CAAeV,GAAG,CAACE,IAAJ,CAASS,IAAxB,CAAlB,CAAJ,EAAsD;AAClDJ,IAAAA,MAAM,CAACK,IAAP,CAAY,oBAAZ;AACH,GAFD,MAEO;AACHJ,IAAAA,aAAa,GAAGb,SAAS,CAACkB,MAAV,CAAiBlB,SAAS,CAACe,IAAV,CAAeV,GAAG,CAACE,IAAJ,CAASS,IAAxB,CAAjB,CAAhB;AACH;;AAED,MAAIJ,MAAM,CAACO,MAAP,GAAgB,CAApB,EAAuB;AACnBb,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAEV,MAAT;AAAiBQ,MAAAA,MAAM,EAAE;AAAzB,KAArB;AACAd,IAAAA,GAAG,CAACiB,GAAJ;AACA;AACH;;AAEDzB,EAAAA,YAAY,CAAC0B,IAAb,CAAkB;AAAER,IAAAA,IAAI,EAAEH,aAAR;AAAuBO,IAAAA,MAAM,EAAE;AAA/B,GAAlB,EACKK,QADL,CACc,MADd,EAEKC,IAFL,CAEWC,WAAD,IAAiB;AACnB;AACA,aAASC,OAAT,CAAiBC,WAAjB,EAA8BC,QAA9B,EAAwC;AACpC,aAAOD,WAAW,CAACE,MAAZ,CAAmB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC1C,YAAIC,GAAG,GAAGD,GAAG,CAACH,QAAD,CAAb;;AACA,YAAI,CAACE,GAAG,CAACE,GAAD,CAAR,EAAe;AACXF,UAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,EAAX;AACH;;AACDF,QAAAA,GAAG,CAACE,GAAD,CAAH,CAASjB,IAAT,CAAcgB,GAAd;AACA,eAAOD,GAAP;AACH,OAPM,EAOJ,EAPI,CAAP;AAQH;;AACD,QAAIG,kBAAkB,GAAGC,MAAM,CAACC,OAAP,CACrBT,OAAO,CAACD,WAAD,EAAc,aAAd,CADc,CAAzB;AAGAjB,IAAAA,OAAO,CAACC,GAAR,CACI,yCADJ,EAEIwB,kBAFJ,EAfmB,CAoBnB;;AAEA7B,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAekB,MAAAA,IAAI,EAAEH;AAArB,KAArB;AACA7B,IAAAA,GAAG,CAACiB,GAAJ;AACH,GA1BL,EA2BKgB,KA3BL,CA2BYC,GAAD,IAAS;AACZlC,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,MAAAA,MAAM,EAAE,GAAV;AAAeE,MAAAA,KAAK,EAAEkB;AAAtB,KAArB;AACAlC,IAAAA,GAAG,CAACiB,GAAJ;AACH,GA9BL;AA+BH","sourcesContent":["import ItemInstance from '../../models/iteminstance';\nimport dbConnect from '../../utils/dbConnect';\n\nimport validator from 'validator';\n\nexport const config = {\n    api: {\n        externalResolver: true,\n    },\n};\n\nexport default async function handler(req, res) {\n    req.body = JSON.parse(req.body);\n    console.log('req.body: ', req.body);\n    var errors = [];\n    var validateduser;\n    await dbConnect();\n\n    if (validator.isEmpty(validator.trim(req.body.user))) {\n        errors.push(' The user is empty');\n    } else {\n        validateduser = validator.escape(validator.trim(req.body.user));\n    }\n\n    if (errors.length > 0) {\n        res.status(500).json({ error: errors, status: 500 });\n        res.end();\n        return;\n    }\n\n    ItemInstance.find({ user: validateduser, status: 'Checkout' })\n        .populate('item')\n        .then((items_order) => {\n            // console.log('items_order in user_order_post: ', items_order);\n            function groupBy(objectArray, property) {\n                return objectArray.reduce(function (acc, obj) {\n                    let key = obj[property];\n                    if (!acc[key]) {\n                        acc[key] = [];\n                    }\n                    acc[key].push(obj);\n                    return acc;\n                }, {});\n            }\n            var groupeditems_order = Object.entries(\n                groupBy(items_order, 'ordernumber')\n            );\n            console.log(\n                'groupeditems_order in user_order_post: ',\n                groupeditems_order\n            );\n\n            // console.log('items_order: ', items_order);\n\n            res.status(201).json({ status: 201, data: groupeditems_order });\n            res.end();\n        })\n        .catch((err) => {\n            res.status(500).json({ status: 500, error: err });\n            res.end();\n        });\n}\n"]},"metadata":{},"sourceType":"module"}