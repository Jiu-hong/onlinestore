{"ast":null,"code":"import Item from '../../models/item';\nimport dbConnect from '../../utils/dbConnect';\nimport formidable from 'formidable';\nimport fs from 'fs';\nimport validator from 'validator';\nexport const config = {\n  api: {\n    externalResolver: true,\n    bodyParser: false\n  }\n};\nexport default async function handler(req, res) {\n  const form = formidable({\n    multiples: true\n  });\n  var filearray = [];\n  var title, validatedtitle, owner, validatedowner, quantity, validatedquantity, price, validatedprice, introduction, validatedintroduction, insid, validatedinsid, file;\n  var errors = [];\n  await dbConnect();\n  form.parse(req, (err, fields, files) => {\n    if (err) {\n      res.json(err);\n      return;\n    }\n\n    title = fields.title;\n    insid = fields.insid;\n    owner = fields.owner;\n    quantity = fields.quantity;\n    price = fields.price;\n    introduction = fields.introduction;\n    file = files.itemattach; // validator text\n\n    if (!validator.isLength(validator.trim(title), {\n      min: 2,\n      max: 25\n    })) {\n      errors.push(' The title length should be 1 - 25 length');\n    } else {\n      validatedtitle = validator.escape(validator.trim(title));\n    }\n\n    if (validator.isEmpty(validator.trim(insid))) {\n      errors.push(' The insid is empty');\n    } else {\n      validatedinsid = validator.escape(validator.trim(insid));\n    }\n\n    if (validator.isEmpty(validator.trim(owner))) {\n      errors.push(' The owner is empty');\n    } else {\n      validatedowner = validator.escape(validator.trim(owner));\n    }\n\n    if (validator.isEmpty(validator.trim(quantity))) {\n      errors.push(' The quantity is empty');\n    } else {\n      if (validator.isInt(validator.trim(quantity))) {\n        validatedquantity = validator.escape(validator.trim(quantity));\n      } else {\n        errors.push(' The quantity is NOT integer');\n      }\n    }\n\n    if (validator.isEmpty(validator.trim(price))) {\n      errors.push(' The price is empty');\n    } else {\n      if (validator.isFloat(validator.trim(price))) {\n        validatedprice = validator.escape(validator.trim(price));\n      } else {\n        errors.push(' The price is NOT Float');\n      }\n    }\n\n    if (validator.isEmpty(validator.trim(introduction))) {\n      errors.push(' The introduction is empty');\n    } else {\n      if (validator.isLength(validator.trim(introduction), {\n        min: 20,\n        max: 100\n      })) {\n        validatedintroduction = validator.escape(validator.trim(introduction));\n      } else {\n        console.log('validator.trim(introduction): ', validator.trim(introduction));\n        errors.push(' The introduction length should be 2 - 100 length');\n      }\n    }\n\n    if (errors.length > 0) {\n      console.log('errors in owner_updateitem_post.js: ', errors);\n      res.status(500).json({\n        error: errors,\n        status: 500\n      });\n      res.end();\n      return;\n    } // fields.textarea -> send to comment\n\n\n    var oldPath, newPath;\n\n    if (file.length) {\n      // var filestodb = [];\n      for (let i = 0; i < file.length; i++) {\n        oldPath = file[i].path;\n        newPath = 'public/item/' + file[i].name;\n        fs.renameSync(oldPath, newPath);\n        newPath = '/' + newPath.split('/').slice(1).join('/');\n        console.log('newPath name: ', newPath);\n        filearray.push(newPath); //file to db;\n      }\n    } else {\n      if (file.size !== 0) {\n        oldPath = file.path;\n        newPath = 'public/item/' + file.name;\n        fs.renameSync(oldPath, newPath);\n        newPath = '/' + newPath.split('/').slice(1).join('/');\n        console.log('newPath name: ', newPath);\n        filearray.push(newPath); //file to db\n      } else {\n        console.log('no file');\n      }\n    }\n\n    Item.findByIdAndUpdate(validatedinsid, {\n      title: '',\n      image: filearray,\n      owner: '',\n      quantity: '',\n      price: ''\n    }).populate('item').then(item_updated => {\n      console.log('item_updated in owner_updateitem_post.js: ', item_updated);\n      res.status(201).json({\n        status: 201,\n        data: item_updated\n      });\n      res.end();\n    }).catch(err => {\n      console.log('err in owner_updateitem_post.js: ', err);\n      res.status(500).json({\n        status: 500,\n        error: err\n      });\n      res.end();\n    });\n  });\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/api/owner_updateitem_post.js"],"names":["Item","dbConnect","formidable","fs","validator","config","api","externalResolver","bodyParser","handler","req","res","form","multiples","filearray","title","validatedtitle","owner","validatedowner","quantity","validatedquantity","price","validatedprice","introduction","validatedintroduction","insid","validatedinsid","file","errors","parse","err","fields","files","json","itemattach","isLength","trim","min","max","push","escape","isEmpty","isInt","isFloat","console","log","length","status","error","end","oldPath","newPath","i","path","name","renameSync","split","slice","join","size","findByIdAndUpdate","image","populate","then","item_updated","data","catch"],"mappings":"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","sourcesContent":["import Item from '../../models/item';\nimport dbConnect from '../../utils/dbConnect';\n\nimport formidable from 'formidable';\nimport fs from 'fs';\n\nimport validator from 'validator';\n\nexport const config = {\n    api: {\n        externalResolver: true,\n        bodyParser: false,\n    },\n};\n\nexport default async function handler(req, res) {\n    const form = formidable({ multiples: true });\n    var filearray = [];\n    var title,\n        validatedtitle,\n        owner,\n        validatedowner,\n        quantity,\n        validatedquantity,\n        price,\n        validatedprice,\n        introduction,\n        validatedintroduction,\n        insid,\n        validatedinsid,\n        file;\n    var errors = [];\n    await dbConnect();\n\n    form.parse(req, (err, fields, files) => {\n        if (err) {\n            res.json(err);\n            return;\n        }\n\n        title = fields.title;\n        insid = fields.insid;\n        owner = fields.owner;\n        quantity = fields.quantity;\n        price = fields.price;\n        introduction = fields.introduction;\n        file = files.itemattach;\n\n        // validator text\n\n        if (!validator.isLength(validator.trim(title), { min: 2, max: 25 })) {\n            errors.push(' The title length should be 1 - 25 length');\n        } else {\n            validatedtitle = validator.escape(validator.trim(title));\n        }\n\n        if (validator.isEmpty(validator.trim(insid))) {\n            errors.push(' The insid is empty');\n        } else {\n            validatedinsid = validator.escape(validator.trim(insid));\n        }\n\n        if (validator.isEmpty(validator.trim(owner))) {\n            errors.push(' The owner is empty');\n        } else {\n            validatedowner = validator.escape(validator.trim(owner));\n        }\n\n        if (validator.isEmpty(validator.trim(quantity))) {\n            errors.push(' The quantity is empty');\n        } else {\n            if (validator.isInt(validator.trim(quantity))) {\n                validatedquantity = validator.escape(validator.trim(quantity));\n            } else {\n                errors.push(' The quantity is NOT integer');\n            }\n        }\n\n        if (validator.isEmpty(validator.trim(price))) {\n            errors.push(' The price is empty');\n        } else {\n            if (validator.isFloat(validator.trim(price))) {\n                validatedprice = validator.escape(validator.trim(price));\n            } else {\n                errors.push(' The price is NOT Float');\n            }\n        }\n\n        if (validator.isEmpty(validator.trim(introduction))) {\n            errors.push(' The introduction is empty');\n        } else {\n            if (\n                validator.isLength(validator.trim(introduction), {\n                    min: 20,\n                    max: 100,\n                })\n            ) {\n                validatedintroduction = validator.escape(\n                    validator.trim(introduction)\n                );\n            } else {\n                console.log(\n                    'validator.trim(introduction): ',\n                    validator.trim(introduction)\n                );\n                errors.push(\n                    ' The introduction length should be 2 - 100 length'\n                );\n            }\n        }\n\n        if (errors.length > 0) {\n            console.log('errors in owner_updateitem_post.js: ', errors);\n            res.status(500).json({ error: errors, status: 500 });\n            res.end();\n            return;\n        }\n\n        // fields.textarea -> send to comment\n        var oldPath, newPath;\n        if (file.length) {\n            // var filestodb = [];\n            for (let i = 0; i < file.length; i++) {\n                oldPath = file[i].path;\n                newPath = 'public/item/' + file[i].name;\n\n                fs.renameSync(oldPath, newPath);\n                newPath = '/' + newPath.split('/').slice(1).join('/');\n                console.log('newPath name: ', newPath);\n                filearray.push(newPath); //file to db;\n            }\n        } else {\n            if (file.size !== 0) {\n                oldPath = file.path;\n                newPath = 'public/item/' + file.name;\n                fs.renameSync(oldPath, newPath);\n                newPath = '/' + newPath.split('/').slice(1).join('/');\n                console.log('newPath name: ', newPath);\n                filearray.push(newPath); //file to db\n            } else {\n                console.log('no file');\n            }\n        }\n\n        Item.findByIdAndUpdate(validatedinsid, {\n            title: '',\n            image: filearray,\n            owner: '',\n            quantity: '',\n            price: '',\n        })\n            .populate('item')\n            .then((item_updated) => {\n                console.log(\n                    'item_updated in owner_updateitem_post.js: ',\n                    item_updated\n                );\n                res.status(201).json({ status: 201, data: item_updated });\n                res.end();\n            })\n            .catch((err) => {\n                console.log('err in owner_updateitem_post.js: ', err);\n                res.status(500).json({ status: 500, error: err });\n                res.end();\n            });\n    });\n}\n"]},"metadata":{},"sourceType":"module"}