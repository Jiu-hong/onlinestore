{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js\";\nimport React, { createContext, useContext } from 'react';\nexport const FunctionContext = /*#__PURE__*/createContext();\n\nconst PostComment = (formData, grouporders, fnorder, fn) => {\n  return fetch('/api/user_comment_post', {\n    method: 'post',\n    body: formData\n  }).then(response => response.json()).then(result => {\n    if (result.status === 500) {\n      fn(result.error);\n    } else {\n      var newins = result.data;\n\n      for (let i = 0; i < grouporders.length; i++) {\n        var index = grouporders[i][1].findIndex(oldins => oldins._id === newins._id);\n\n        if (index > -1) {\n          grouporders[i][1].splice(index, 1, newins);\n          break;\n        }\n      }\n\n      fnorder(grouporders);\n      fn([]);\n    }\n\n    return result;\n  }) // .then((res) => fno(res))\n  .catch(err => new Error(err));\n};\n\nconst GetAllOrder = (parmsuser, fno) => {\n  return fetch('/api/user_order_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => result.data).then(res => fno(res)).catch(new Error());\n};\n\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chckout_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    fnins(result.data);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(result.data);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst sumItems = instances => {\n  var checkedInstances = instances.filter(instance => instance.check === true);\n  let itemCount = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.quantity, 0);\n  let total = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.item.price * checkedInstance.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};\n\nconst ChgChk = (parmscheck, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chkchg_post', {\n    method: 'post',\n    body: JSON.stringify({\n      check: parmscheck,\n      insid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    if (result.status === 201) {\n      console.log('result.data: ', result.data);\n      var newins = result.data;\n      var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n      ins_cart.splice(index, 1, newins);\n      fnins(ins_cart);\n\n      const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n      var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n      fnlen(inslen);\n      var {\n        itemCount,\n        total\n      } = sumItems(ins_cart);\n      fnc(itemCount);\n      fnt(total);\n    } else {\n      console.log('result: ', result);\n    }\n  }).catch(err => console.log(err));\n};\n\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_deleteins_post', {\n    method: 'post',\n    body: JSON.stringify({\n      insid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(() => {\n    var index = ins_cart.findIndex(oldins => oldins._id === parmsid);\n    ins_cart.splice(index, 1);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst ChangeAddCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changeAddcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      insid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    if (result.status === 201) {\n      console.log('result.data: ', result.data);\n      var newins = result.data;\n      var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n      ins_cart.splice(index, 1, newins);\n      fnins(ins_cart);\n\n      const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n      var inslen = ins_cart.reduce(reducer, 0);\n      fnlen(inslen);\n      var {\n        itemCount,\n        total\n      } = sumItems(ins_cart);\n      fnc(itemCount);\n      fnt(total);\n    } else {\n      console.log('result: ', result);\n    }\n  }) // .catch((err) => new Error(err));\n  .catch(err => console.log('err in catch: ', err));\n};\n\nconst ChangeToCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changetocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      insid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    // result is newins\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    console.log('ins_cart in user_changetocart_post before sumItems: ', ins_cart);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst checkdb = () => {\n  return fetch('/api/del_carts_all').then(console.log('db operation complete')).catch(err => new Error(err));\n};\n\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  //if (!parmsuser) return Promise.reject('no user');\n  return fetch('/api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    console.log('result.data: ', result.data);\n    var newins_cart = result.data;\n    fnins(newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins_cart = result.data; // now the result is new iteminstance\n\n    fnins(newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst FunctionContextProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(FunctionContext.Provider, {\n    value: {\n      GetAllCarts,\n      AddToCart,\n      checkdb,\n      ChangeToCart,\n      ChangeAddCart,\n      DeleteIns,\n      ChgChk,\n      checkOut,\n      GetAllOrder,\n      PostComment\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 9\n  }, this);\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js"],"names":["React","createContext","useContext","FunctionContext","PostComment","formData","grouporders","fnorder","fn","fetch","method","body","then","response","json","result","status","error","newins","data","i","length","index","findIndex","oldins","_id","splice","catch","err","Error","GetAllOrder","parmsuser","fno","JSON","stringify","user","res","checkOut","fnins","fnlen","fnc","fnt","reducer","accumulator","currentValue","quantity","inslen","reduce","itemCount","total","sumItems","instances","checkedInstances","filter","instance","check","checkedInstance","item","price","toFixed","ChgChk","parmscheck","parmsid","ins_cart","insid","console","log","DeleteIns","ChangeAddCart","parmscount","count","ChangeToCart","checkdb","GetAllCarts","newins_cart","AddToCart","itemid","FunctionContextProvider","children","usefunctions"],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const FunctionContext = createContext();\n\nconst PostComment = (formData, grouporders, fnorder, fn) => {\n    return (\n        fetch('/api/user_comment_post', {\n            method: 'post',\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                if (result.status === 500) {\n                    fn(result.error);\n                } else {\n                    var newins = result.data;\n\n                    for (let i = 0; i < grouporders.length; i++) {\n                        var index = grouporders[i][1].findIndex(\n                            (oldins) => oldins._id === newins._id\n                        );\n                        if (index > -1) {\n                            grouporders[i][1].splice(index, 1, newins);\n                            break;\n                        }\n                    }\n\n                    fnorder(grouporders);\n                    fn([]);\n                }\n                return result;\n            })\n            // .then((res) => fno(res))\n            .catch((err) => new Error(err))\n    );\n};\nconst GetAllOrder = (parmsuser, fno) => {\n    return fetch('/api/user_order_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => result.data)\n        .then((res) => fno(res))\n        .catch(new Error());\n};\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_chckout_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            fnins(result.data);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(result.data);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst sumItems = (instances) => {\n    var checkedInstances = instances.filter(\n        (instance) => instance.check === true\n    );\n\n    let itemCount = checkedInstances.reduce(\n        (total, checkedInstance) => total + checkedInstance.quantity,\n        0\n    );\n    let total = checkedInstances\n        .reduce(\n            (total, checkedInstance) =>\n                total + checkedInstance.item.price * checkedInstance.quantity,\n            0\n        )\n        .toFixed(2);\n\n    return { itemCount, total };\n};\nconst ChgChk = (\n    parmscheck,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_chkchg_post', {\n        method: 'post',\n        body: JSON.stringify({\n            check: parmscheck,\n            insid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            if (result.status === 201) {\n                console.log('result.data: ', result.data);\n                var newins = result.data;\n                var index = ins_cart.findIndex(\n                    (oldins) => oldins._id === newins._id\n                );\n\n                ins_cart.splice(index, 1, newins);\n\n                fnins(ins_cart);\n\n                const reducer = (accumulator, currentValue) =>\n                    accumulator + currentValue.quantity;\n                var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n                fnlen(inslen);\n                var { itemCount, total } = sumItems(ins_cart);\n                fnc(itemCount);\n                fnt(total);\n            } else {\n                console.log('result: ', result);\n            }\n        })\n        .catch((err) => console.log(err));\n};\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_deleteins_post', {\n        method: 'post',\n        body: JSON.stringify({\n            insid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then(() => {\n            var index = ins_cart.findIndex((oldins) => oldins._id === parmsid);\n\n            ins_cart.splice(index, 1);\n\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst ChangeAddCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return (\n        fetch('/api/user_changeAddcart_post', {\n            method: 'post',\n            body: JSON.stringify({\n                count: parmscount,\n                insid: parmsid,\n                user: parmsuser,\n            }),\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                if (result.status === 201) {\n                    console.log('result.data: ', result.data);\n                    var newins = result.data;\n\n                    var index = ins_cart.findIndex(\n                        (oldins) => oldins._id === newins._id\n                    );\n\n                    ins_cart.splice(index, 1, newins);\n\n                    fnins(ins_cart);\n\n                    const reducer = (accumulator, currentValue) =>\n                        accumulator + currentValue.quantity;\n                    var inslen = ins_cart.reduce(reducer, 0);\n                    fnlen(inslen);\n\n                    var { itemCount, total } = sumItems(ins_cart);\n                    fnc(itemCount);\n                    fnt(total);\n                } else {\n                    console.log('result: ', result);\n                }\n            })\n            // .catch((err) => new Error(err));\n            .catch((err) => console.log('err in catch: ', err))\n    );\n};\n\nconst ChangeToCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_changetocart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            insid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            // result is newins\n            var newins = result.data;\n            var index = ins_cart.findIndex(\n                (oldins) => oldins._id === newins._id\n            );\n            ins_cart.splice(index, 1, newins);\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            console.log(\n                'ins_cart in user_changetocart_post before sumItems: ',\n                ins_cart\n            );\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\nconst checkdb = () => {\n    return fetch('/api/del_carts_all')\n        .then(console.log('db operation complete'))\n        .catch((err) => new Error(err));\n};\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n    //if (!parmsuser) return Promise.reject('no user');\n    return fetch('/api/user_getallcart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            console.log('result.data: ', result.data);\n            var newins_cart = result.data;\n            fnins(newins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(newins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_addtocart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            itemid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins_cart = result.data;\n            // now the result is new iteminstance\n\n            fnins(newins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = newins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(newins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst FunctionContextProvider = ({ children }) => {\n    return (\n        <FunctionContext.Provider\n            value={{\n                GetAllCarts,\n                AddToCart,\n                checkdb,\n                ChangeToCart,\n                ChangeAddCart,\n                DeleteIns,\n                ChgChk,\n                checkOut,\n                GetAllOrder,\n                PostComment,\n            }}\n        >\n            {children}\n        </FunctionContext.Provider>\n    );\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;\n"]},"metadata":{},"sourceType":"module"}