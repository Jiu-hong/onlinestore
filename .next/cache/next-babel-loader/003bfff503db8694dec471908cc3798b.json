{"ast":null,"code":"import mongoose from 'mongoose';\nvar Schema = mongoose.Schema;\nvar ItemSchema = new Schema({\n  title: {\n    type: String,\n    required: true\n  },\n  owner: {\n    type: Schema.Types.ObjectId,\n    ref: 'Owner',\n    required: true\n  },\n  quantity: {\n    type: Number,\n    required: true\n  },\n  price: {\n    type: Number,\n    required: true\n  },\n  image: [{\n    type: String\n  }],\n  genre: [{\n    type: Schema.Types.ObjectId,\n    ref: 'Genre'\n  }]\n}); // Virtual for item's URL\n\nItemSchema.virtual('url').get(function () {\n  return '/item/' + this._id;\n}); //Export model\n\nexport default mongoose.models.Item || mongoose.model('Item', ItemSchema);","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/models/item.js"],"names":["mongoose","Schema","ItemSchema","title","type","String","required","owner","Types","ObjectId","ref","quantity","Number","price","image","genre","virtual","get","_id","models","Item","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AAEA,IAAIC,UAAU,GAAG,IAAID,MAAJ,CAAW;AACxBE,EAAAA,KAAK,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADiB;AAExBC,EAAAA,KAAK,EAAE;AAAEH,IAAAA,IAAI,EAAEH,MAAM,CAACO,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE,OAApC;AAA6CJ,IAAAA,QAAQ,EAAE;AAAvD,GAFiB;AAGxBK,EAAAA,QAAQ,EAAE;AAAEP,IAAAA,IAAI,EAAEQ,MAAR;AAAgBN,IAAAA,QAAQ,EAAE;AAA1B,GAHc;AAIxBO,EAAAA,KAAK,EAAE;AAAET,IAAAA,IAAI,EAAEQ,MAAR;AAAgBN,IAAAA,QAAQ,EAAE;AAA1B,GAJiB;AAKxBQ,EAAAA,KAAK,EAAE,CAAC;AAAEV,IAAAA,IAAI,EAAEC;AAAR,GAAD,CALiB;AAMxBU,EAAAA,KAAK,EAAE,CAAC;AAAEX,IAAAA,IAAI,EAAEH,MAAM,CAACO,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE;AAApC,GAAD;AANiB,CAAX,CAAjB,C,CASA;;AACAR,UAAU,CAACc,OAAX,CAAmB,KAAnB,EAA0BC,GAA1B,CAA8B,YAAY;AACtC,SAAO,WAAW,KAAKC,GAAvB;AACH,CAFD,E,CAIA;;AACA,eAAelB,QAAQ,CAACmB,MAAT,CAAgBC,IAAhB,IAAwBpB,QAAQ,CAACqB,KAAT,CAAe,MAAf,EAAuBnB,UAAvB,CAAvC","sourcesContent":["import mongoose from 'mongoose';\n\nvar Schema = mongoose.Schema;\n\nvar ItemSchema = new Schema({\n    title: { type: String, required: true },\n    owner: { type: Schema.Types.ObjectId, ref: 'Owner', required: true },\n    quantity: { type: Number, required: true },\n    price: { type: Number, required: true },\n    image: [{ type: String }],\n    genre: [{ type: Schema.Types.ObjectId, ref: 'Genre' }],\n});\n\n// Virtual for item's URL\nItemSchema.virtual('url').get(function () {\n    return '/item/' + this._id;\n});\n\n//Export model\nexport default mongoose.models.Item || mongoose.model('Item', ItemSchema);\n"]},"metadata":{},"sourceType":"module"}