{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/index.js\";\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport dbConnect from '../utils/dbConnect';\nimport Layout from '../components/layout';\nimport Item from '../models/Item';\nexport default function Index({\n  items\n}) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pet.image_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"pet-name\",\n          children: pet.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pet-name\",\n            children: pet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"owner\",\n            children: [\"Owner: \", pet.owner_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"likes info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: \"Likes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: pet.likes.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [data, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dislikes info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"label\",\n              children: \"Dislikes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: pet.dislikes.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [data, \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-container\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: \"/[id]/edit\",\n              as: `/${pet._id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn edit\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/[id]\",\n              as: `/${pet._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn view\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n/* Retrieves pet(s) data from mongodb database */\n\nexport async function getStaticProps() {\n  await dbConnect();\n  /* find all the data in our database */\n\n  const result = await Item.find({});\n  const items = result.map(doc => {\n    const item = doc.toObject();\n    item._id = item._id.toString();\n    return item;\n  });\n  return {\n    props: {\n      items: items\n    }\n  };\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/index.js"],"names":["Head","styles","dbConnect","Layout","Item","Index","items","map","item","pet","image_url","name","owner_name","likes","data","index","dislikes","_id","getStaticProps","result","find","doc","toObject","toString","props"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport dbConnect from '../utils/dbConnect';\nimport Layout from '../components/layout';\nimport Item from '../models/Item';\n\nexport default function Index({ items }) {\n  return (\n    <Layout>\n      {/* Create a card for each pet */}\n      {items.map((item) => (\n        <div key={item._id}>\n          <div className='card'>\n            <img src={pet.image_url} />\n            <h5 className='pet-name'>{pet.name}</h5>\n            <div className='main-content'>\n              <p className='pet-name'>{pet.name}</p>\n              <p className='owner'>Owner: {pet.owner_name}</p>\n\n              {/* Extra Pet Info: Likes and Dislikes */}\n              <div className='likes info'>\n                <p className='label'>Likes</p>\n                <ul>\n                  {pet.likes.map((data, index) => (\n                    <li key={index}>{data} </li>\n                  ))}\n                </ul>\n              </div>\n              <div className='dislikes info'>\n                <p className='label'>Dislikes</p>\n                <ul>\n                  {pet.dislikes.map((data, index) => (\n                    <li key={index}>{data} </li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className='btn-container'>\n                <Link href='/[id]/edit' as={`/${pet._id}/edit`}>\n                  <button className='btn edit'>Edit</button>\n                </Link>\n                <Link href='/[id]' as={`/${pet._id}`}>\n                  <button className='btn view'>View</button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </Layout>\n  );\n}\n/* Retrieves pet(s) data from mongodb database */\nexport async function getStaticProps() {\n  await dbConnect();\n\n  /* find all the data in our database */\n  const result = await Item.find({});\n  const items = result.map((doc) => {\n    const item = doc.toObject();\n    item._id = item._id.toString();\n    return item;\n  });\n\n  return { props: { items: items } };\n}\n"]},"metadata":{},"sourceType":"module"}