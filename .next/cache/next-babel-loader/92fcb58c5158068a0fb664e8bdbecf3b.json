{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js\",\n    _s = $RefreshSig$();\n\nimport styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react'; //import Layout from '../components/layout';\n\nimport ImageGallery from 'react-image-gallery';\nexport default function About() {\n  _s();\n\n  var _useState = useState(null),\n      images = _useState[0],\n      setImages = _useState[1];\n\n  useEffect(function () {\n    var shouldCancel = false;\n\n    var call = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/uploads');\n\n              case 2:\n                response = _context.sent;\n\n                if (!shouldCancel && response.data && response.data.length > 0) {\n                  setImages(response.data.map(function (url) {\n                    return {\n                      original: \"\".concat(url, \"=w1024\"),\n                      thumbnail: \"\".concat(url, \"=w100\")\n                    };\n                  }));\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function call() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    call();\n    return function () {\n      return shouldCancel = true;\n    };\n  }, []);\n  return images ? /*#__PURE__*/_jsxDEV(ImageGallery, {\n    items: images\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this) : null;\n}\n\n_s(About, \"1vh5OZMc1B9DNsrOB9lCRib8LTI=\");\n\n_c = About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js"],"names":["styles","useState","useEffect","ImageGallery","About","images","setImages","shouldCancel","call","fetch","response","data","length","map","url","original","thumbnail"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACAH,QAAQ,CAAC,IAAD,CADR;AAAA,MACrBI,MADqB;AAAA,MACbC,SADa;;AAG5BJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,YAAY,GAAG,KAAnB;;AAEA,QAAMC,IAAI;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACcC,KAAK,CAAC,UAAD,CADnB;;AAAA;AACHC,gBAAAA,QADG;;AAET,oBAAI,CAACH,YAAD,IAAiBG,QAAQ,CAACC,IAA1B,IAAkCD,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAA7D,EAAgE;AAC5DN,kBAAAA,SAAS,CACLI,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAkB,UAACC,GAAD;AAAA,2BAAU;AACxBC,sBAAAA,QAAQ,YAAKD,GAAL,WADgB;AAExBE,sBAAAA,SAAS,YAAKF,GAAL;AAFe,qBAAV;AAAA,mBAAlB,CADK,CAAT;AAMH;;AATQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAJN,IAAI;AAAA;AAAA;AAAA,OAAV;;AAWAA,IAAAA,IAAI;AACJ,WAAO;AAAA,aAAOD,YAAY,GAAG,IAAtB;AAAA,KAAP;AACH,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAOF,MAAM,gBAAG,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAH,GAAqC,IAAlD;AACH;;GAtBuBD,K;;KAAAA,K","sourcesContent":["import styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react';\n\n//import Layout from '../components/layout';\nimport ImageGallery from 'react-image-gallery';\nexport default function About() {\n    const [images, setImages] = useState(null);\n\n    useEffect(() => {\n        let shouldCancel = false;\n\n        const call = async () => {\n            const response = await fetch('/uploads');\n            if (!shouldCancel && response.data && response.data.length > 0) {\n                setImages(\n                    response.data.map((url) => ({\n                        original: `${url}=w1024`,\n                        thumbnail: `${url}=w100`,\n                    }))\n                );\n            }\n        };\n        call();\n        return () => (shouldCancel = true);\n    }, []);\n\n    return images ? <ImageGallery items={images} /> : null;\n}\n"]},"metadata":{},"sourceType":"module"}