{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js\";\nimport styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react'; //import Layout from '../components/layout';\n\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nexport default function About() {\n  const {\n    0: images,\n    1: setImages\n  } = useState(null);\n  useEffect(() => {\n    let shouldCancel = false;\n    fetch('https://google-photos-album-demo2.glitch.me/4eXXxxG3rYwQVf948').then(response => {\n      const reader = response.body.getReader();\n      const stream = new ReadableStream({\n        start(controller) {\n          function push() {\n            reader.read().then(({\n              done,\n              value\n            }) => {\n              if (done) {\n                console.log('I am in reader if');\n                controller.close();\n                return;\n              }\n\n              console.log('I am here');\n              controller.enqueue(value);\n              push();\n            });\n          }\n\n          push();\n        }\n\n      });\n      return new Response(stream, {\n        header: {\n          'Content-Type': 'text/html'\n        }\n      });\n    });\n    /* if (!shouldCancel && response.data && response.data.length > 0) {\n            setImages(\n                response.data.map((url) => ({\n                    original: `${url}=w1024`,\n                    thumbnail: `${url}=w100`,\n                }))\n            );\n        }*/\n\n    return () => shouldCancel = true;\n  }, []);\n  return images ? /*#__PURE__*/_jsxDEV(ImageGallery, {\n    items: images\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }, this) : null;\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js"],"names":["styles","useState","useEffect","ImageGallery","About","images","setImages","shouldCancel","fetch","then","response","reader","body","getReader","stream","ReadableStream","start","controller","push","read","done","value","console","log","close","enqueue","Response","header"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,kDAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,YAAY,GAAG,KAAnB;AAEAC,IAAAA,KAAK,CACD,+DADC,CAAL,CAEEC,IAFF,CAEQC,QAAD,IAAc;AACjB,YAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAT,CAAcC,SAAd,EAAf;AACA,YAAMC,MAAM,GAAG,IAAIC,cAAJ,CAAmB;AAC9BC,QAAAA,KAAK,CAACC,UAAD,EAAa;AACd,mBAASC,IAAT,GAAgB;AACZP,YAAAA,MAAM,CAACQ,IAAP,GAAcV,IAAd,CAAmB,CAAC;AAAEW,cAAAA,IAAF;AAAQC,cAAAA;AAAR,aAAD,KAAqB;AACpC,kBAAID,IAAJ,EAAU;AACNE,gBAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,gBAAAA,UAAU,CAACO,KAAX;AACA;AACH;;AACDF,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAN,cAAAA,UAAU,CAACQ,OAAX,CAAmBJ,KAAnB;AACAH,cAAAA,IAAI;AACP,aATD;AAUH;;AACDA,UAAAA,IAAI;AACP;;AAf6B,OAAnB,CAAf;AAiBA,aAAO,IAAIQ,QAAJ,CAAaZ,MAAb,EAAqB;AACxBa,QAAAA,MAAM,EAAE;AAAE,0BAAgB;AAAlB;AADgB,OAArB,CAAP;AAGH,KAxBD;AA0BA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,WAAO,MAAOpB,YAAY,GAAG,IAA7B;AACH,GAvCQ,EAuCN,EAvCM,CAAT;AAyCA,SAAOF,MAAM,gBAAG,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAH,GAAqC,IAAlD;AACH","sourcesContent":["import styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react';\n\n//import Layout from '../components/layout';\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\n\nexport default function About() {\n    const [images, setImages] = useState(null);\n\n    useEffect(() => {\n        let shouldCancel = false;\n\n        fetch(\n            'https://google-photos-album-demo2.glitch.me/4eXXxxG3rYwQVf948'\n        ).then((response) => {\n            const reader = response.body.getReader();\n            const stream = new ReadableStream({\n                start(controller) {\n                    function push() {\n                        reader.read().then(({ done, value }) => {\n                            if (done) {\n                                console.log('I am in reader if');\n                                controller.close();\n                                return;\n                            }\n                            console.log('I am here');\n                            controller.enqueue(value);\n                            push();\n                        });\n                    }\n                    push();\n                },\n            });\n            return new Response(stream, {\n                header: { 'Content-Type': 'text/html' },\n            });\n        });\n\n        /* if (!shouldCancel && response.data && response.data.length > 0) {\n                setImages(\n                    response.data.map((url) => ({\n                        original: `${url}=w1024`,\n                        thumbnail: `${url}=w100`,\n                    }))\n                );\n            }*/\n\n        return () => (shouldCancel = true);\n    }, []);\n\n    return images ? <ImageGallery items={images} /> : null;\n}\n"]},"metadata":{},"sourceType":"module"}