{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst Storage = cartItems => {\n  localStorage.setItem('cart', JSON.stringify(cartItems.length > 0 ? cartItems : []));\n};\n\nexport const sumItems = cartItems => {\n  Storage(cartItems);\n  let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\n  let total = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};\n/*const [state, dispatch] = useReducer(CartReducer, initialState);\n  const increase = (payload) => {\n    dispatch({ type: 'INCREASE', payload });\n  };*/\n\nexport const CartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      if (!state.cartItems.find(item => item.id === action.payload.id)) {\n        state.cartItems.push(_objectSpread(_objectSpread({}, action.payload), {}, {\n          quantity: 1\n        }));\n      }\n\n      return _objectSpread(_objectSpread(_objectSpread({}, state), sumItems(state.cartItems)), {}, {\n        cartItems: [...state.cartItems]\n      });\n\n    case 'REMOVE_ITEM':\n      return _objectSpread(_objectSpread(_objectSpread({}, state), sumItems(state.cartItems.filter(item => item.id !== action.payload.id))), {}, {\n        cartItems: [...state.cartItems.filter(item => item.id !== action.payload.id)]\n      });\n\n    case 'INCREASE':\n      state.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity++;\n      return _objectSpread(_objectSpread(_objectSpread({}, state), sumItems(state.cartItems)), {}, {\n        cartItems: [...state.cartItems]\n      });\n\n    case 'DECREASE':\n      state.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity--;\n      return _objectSpread(_objectSpread(_objectSpread({}, state), sumItems(state.cartItems)), {}, {\n        cartItems: [...state.cartItems]\n      });\n\n    case 'CHECKOUT':\n      return _objectSpread({\n        cartItems: [],\n        checkout: true\n      }, sumItems([]));\n\n    case 'CLEAR':\n      return _objectSpread({\n        cartItems: []\n      }, sumItems([]));\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/CartReducer.js"],"names":["Storage","cartItems","localStorage","setItem","JSON","stringify","length","sumItems","itemCount","reduce","total","product","quantity","price","toFixed","CartReducer","state","action","type","find","item","id","payload","push","filter","findIndex","checkout"],"mappings":"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","sourcesContent":["const Storage = (cartItems) => {\n  localStorage.setItem(\n    'cart',\n    JSON.stringify(cartItems.length > 0 ? cartItems : [])\n  );\n};\n\nexport const sumItems = (cartItems) => {\n  Storage(cartItems);\n  let itemCount = cartItems.reduce(\n    (total, product) => total + product.quantity,\n    0\n  );\n  let total = cartItems\n    .reduce((total, product) => total + product.price * product.quantity, 0)\n    .toFixed(2);\n  return { itemCount, total };\n};\n/*const [state, dispatch] = useReducer(CartReducer, initialState);\n  const increase = (payload) => {\n    dispatch({ type: 'INCREASE', payload });\n  };*/\nexport const CartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      if (!state.cartItems.find((item) => item.id === action.payload.id)) {\n        state.cartItems.push({\n          ...action.payload,\n          quantity: 1,\n        });\n      }\n\n      return {\n        ...state,\n        ...sumItems(state.cartItems),\n        cartItems: [...state.cartItems],\n      };\n    case 'REMOVE_ITEM':\n      return {\n        ...state,\n        ...sumItems(\n          state.cartItems.filter((item) => item.id !== action.payload.id)\n        ),\n        cartItems: [\n          ...state.cartItems.filter((item) => item.id !== action.payload.id),\n        ],\n      };\n    case 'INCREASE':\n      state.cartItems[\n        state.cartItems.findIndex((item) => item.id === action.payload.id)\n      ].quantity++;\n      return {\n        ...state,\n        ...sumItems(state.cartItems),\n        cartItems: [...state.cartItems],\n      };\n    case 'DECREASE':\n      state.cartItems[\n        state.cartItems.findIndex((item) => item.id === action.payload.id)\n      ].quantity--;\n      return {\n        ...state,\n        ...sumItems(state.cartItems),\n        cartItems: [...state.cartItems],\n      };\n    case 'CHECKOUT':\n      return {\n        cartItems: [],\n        checkout: true,\n        ...sumItems([]),\n      };\n    case 'CLEAR':\n      return {\n        cartItems: [],\n        ...sumItems([]),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}