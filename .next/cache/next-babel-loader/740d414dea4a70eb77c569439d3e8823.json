{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js\";\nimport React, { createContext, useContext } from 'react';\nexport const FunctionContext = /*#__PURE__*/createContext();\n\nconst PostComment = (formData, orders, fnorder, fn) => {\n  return fetch('/api/user_comment_post', {\n    method: 'post',\n    body: formData\n  }).then(response => response.json()).then(result => {\n    if (result.status === 500) {\n      fn(result.error);\n    } else {\n      var neworder = result.data;\n      var index = orders.findIndex(oldorder => oldorder._id === neworder._id);\n      orders.splice(index, 1, neworder);\n      fnorder(orders);\n      fn([]);\n    }\n\n    return result;\n  }) // .then((res) => fno(res))\n  .catch(err => new Error(err));\n};\n\nconst GetAllOrder = (parmsuser, fno) => {\n  return fetch('/api/user_order_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => result.data).then(res => fno(res)).catch(new Error());\n};\n\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chckout_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    fnins(result.data);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(result.data);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst sumItems = instances => {\n  var checkedInstances = instances.filter(instance => instance.check === true);\n  let itemCount = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.quantity, 0);\n  let total = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.item.price * checkedInstance.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};\n\nconst ChgChk = (parmscheck, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chkchg_post', {\n    method: 'post',\n    body: JSON.stringify({\n      check: parmscheck,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_deleteins_post', {\n    method: 'post',\n    body: JSON.stringify({\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(() => {\n    var index = ins_cart.findIndex(oldins => oldins._id === parmsid);\n    ins_cart.splice(index, 1);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst ChangeAddCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changeAddcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst ChangeToCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changetocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    // result is newins\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst checkdb = () => {\n  return fetch('/api/del_carts_all').then(console.log('db operation complete')).catch(err => new Error(err));\n};\n\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  //if (!parmsuser) return Promise.reject('no user');\n  return fetch('/api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins_cart = result.data;\n    fnins(newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins_cart = result.data; // now the result is new iteminstance\n\n    fnins(newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst FunctionContextProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(FunctionContext.Provider, {\n    value: {\n      GetAllCarts,\n      AddToCart,\n      checkdb,\n      ChangeToCart,\n      ChangeAddCart,\n      DeleteIns,\n      ChgChk,\n      checkOut,\n      GetAllOrder,\n      PostComment\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js"],"names":["React","createContext","useContext","FunctionContext","PostComment","formData","orders","fnorder","fn","fetch","method","body","then","response","json","result","status","error","neworder","data","index","findIndex","oldorder","_id","splice","catch","err","Error","GetAllOrder","parmsuser","fno","JSON","stringify","user","res","checkOut","fnins","fnlen","fnc","fnt","reducer","accumulator","currentValue","quantity","inslen","reduce","itemCount","total","sumItems","instances","checkedInstances","filter","instance","check","checkedInstance","item","price","toFixed","ChgChk","parmscheck","parmsid","ins_cart","instanceid","newins","oldins","DeleteIns","ChangeAddCart","parmscount","count","ChangeToCart","checkdb","console","log","GetAllCarts","newins_cart","AddToCart","itemid","FunctionContextProvider","children","usefunctions"],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const FunctionContext = createContext();\n\nconst PostComment = (formData, orders, fnorder, fn) => {\n  return (\n    fetch('/api/user_comment_post', {\n      method: 'post',\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        if (result.status === 500) {\n          fn(result.error);\n        } else {\n          var neworder = result.data;\n\n          var index = orders.findIndex(\n            (oldorder) => oldorder._id === neworder._id\n          );\n\n          orders.splice(index, 1, neworder);\n          fnorder(orders);\n          fn([]);\n        }\n        return result;\n      })\n      // .then((res) => fno(res))\n      .catch((err) => new Error(err))\n  );\n};\nconst GetAllOrder = (parmsuser, fno) => {\n  return fetch('/api/user_order_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => result.data)\n    .then((res) => fno(res))\n    .catch(new Error());\n};\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chckout_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      fnins(result.data);\n\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n      fnlen(inslen);\n\n      var { itemCount, total } = sumItems(result.data);\n      fnc(itemCount);\n      fnt(total);\n    })\n    .catch(new Error());\n};\n\nconst sumItems = (instances) => {\n  var checkedInstances = instances.filter(\n    (instance) => instance.check === true\n  );\n\n  let itemCount = checkedInstances.reduce(\n    (total, checkedInstance) => total + checkedInstance.quantity,\n    0\n  );\n  let total = checkedInstances\n    .reduce(\n      (total, checkedInstance) =>\n        total + checkedInstance.item.price * checkedInstance.quantity,\n      0\n    )\n    .toFixed(2);\n\n  return { itemCount, total };\n};\nconst ChgChk = (\n  parmscheck,\n  parmsid,\n  parmsuser,\n  ins_cart,\n  fnins,\n  fnlen,\n  fnc,\n  fnt\n) => {\n  return fetch('/api/user_chkchg_post', {\n    method: 'post',\n    body: JSON.stringify({\n      check: parmscheck,\n      instanceid: parmsid,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      var newins = result.data;\n      var index = ins_cart.findIndex((oldins) => oldins._id === newins._id);\n\n      ins_cart.splice(index, 1, newins);\n\n      fnins(ins_cart);\n\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n      fnlen(inslen);\n      var { itemCount, total } = sumItems(ins_cart);\n      fnc(itemCount);\n      fnt(total);\n    })\n    .catch(new Error());\n};\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_deleteins_post', {\n    method: 'post',\n    body: JSON.stringify({\n      instanceid: parmsid,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then(() => {\n      var index = ins_cart.findIndex((oldins) => oldins._id === parmsid);\n\n      ins_cart.splice(index, 1);\n\n      fnins(ins_cart);\n\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n      fnlen(inslen);\n\n      var { itemCount, total } = sumItems(ins_cart);\n      fnc(itemCount);\n      fnt(total);\n    })\n    .catch(new Error());\n};\n\nconst ChangeAddCart = (\n  parmscount,\n  parmsid,\n  parmsuser,\n  ins_cart,\n  fnins,\n  fnlen,\n  fnc,\n  fnt\n) => {\n  return fetch('/api/user_changeAddcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      var newins = result.data;\n\n      var index = ins_cart.findIndex((oldins) => oldins._id === newins._id);\n\n      ins_cart.splice(index, 1, newins);\n\n      fnins(ins_cart);\n\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = ins_cart.reduce(reducer, 0);\n      fnlen(inslen);\n\n      var { itemCount, total } = sumItems(ins_cart);\n      fnc(itemCount);\n      fnt(total);\n    })\n    .catch(new Error());\n};\n\nconst ChangeToCart = (\n  parmscount,\n  parmsid,\n  parmsuser,\n  ins_cart,\n  fnins,\n  fnlen,\n  fnc,\n  fnt\n) => {\n  return fetch('/api/user_changetocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      // result is newins\n      var newins = result.data;\n      var index = ins_cart.findIndex((oldins) => oldins._id === newins._id);\n      ins_cart.splice(index, 1, newins);\n      fnins(ins_cart);\n\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = ins_cart.reduce(reducer, 0);\n      fnlen(inslen);\n\n      var { itemCount, total } = sumItems(ins_cart);\n      fnc(itemCount);\n      fnt(total);\n    })\n    .catch(new Error());\n};\nconst checkdb = () => {\n  return fetch('/api/del_carts_all')\n    .then(console.log('db operation complete'))\n    .catch((err) => new Error(err));\n};\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  //if (!parmsuser) return Promise.reject('no user');\n  return fetch('/api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      var newins_cart = result.data;\n      fnins(newins_cart);\n\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n\n      fnlen(inslen);\n\n      var { itemCount, total } = sumItems(newins_cart);\n      fnc(itemCount);\n      fnt(total);\n    })\n    .catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      var newins_cart = result.data;\n      // now the result is new iteminstance\n\n      fnins(newins_cart);\n\n      const reducer = (accumulator, currentValue) =>\n        accumulator + currentValue.quantity;\n      var inslen = newins_cart.reduce(reducer, 0);\n      fnlen(inslen);\n\n      var { itemCount, total } = sumItems(newins_cart);\n      fnc(itemCount);\n      fnt(total);\n    })\n    .catch(new Error());\n};\n\nconst FunctionContextProvider = ({ children }) => {\n  return (\n    <FunctionContext.Provider\n      value={{\n        GetAllCarts,\n        AddToCart,\n        checkdb,\n        ChangeToCart,\n        ChangeAddCart,\n        DeleteIns,\n        ChgChk,\n        checkOut,\n        GetAllOrder,\n        PostComment,\n      }}\n    >\n      {children}\n    </FunctionContext.Provider>\n  );\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;\n"]},"metadata":{},"sourceType":"module"}