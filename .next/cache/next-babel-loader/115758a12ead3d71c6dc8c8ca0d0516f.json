{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//import Head from 'next/head';\n//import styles from '../styles/Home.module.css';\nimport { useEffect } from 'react';\nimport dbConnect from '../utils/dbConnect';\nimport Layout from '../components/layout';\nimport Item from '../models/item';\nimport ItemsInIndex from '../components/itemsInIndex';\nimport { useItemsDispatch } from './contexts/ProductsContext';\nimport { useUserDispatch, useUser } from './contexts/userContext';\nimport { useInsDispatch } from './contexts/CartContext';\nimport { useInitialDispatch } from './contexts/initialContext';\nimport { usefunctions } from './contexts/functionContext';\nexport default function Index(_ref) {\n  var items = _ref.items;\n  var temp;\n  var user = useUser();\n  var setUser = useUserDispatch();\n\n  var _useItemsDispatch = useItemsDispatch(),\n      setItems = _useItemsDispatch.setItems,\n      setItemsLen = _useItemsDispatch.setItemsLen;\n\n  var _useInsDispatch = useInsDispatch(),\n      setInstance = _useInsDispatch.setInstance,\n      setInsLen = _useInsDispatch.setInsLen,\n      setItemCount = _useInsDispatch.setItemCount,\n      setTotal = _useInsDispatch.setTotal;\n\n  var setInitial = useInitialDispatch();\n\n  var _usefunctions = usefunctions(),\n      GetAllCarts = _usefunctions.GetAllCarts;\n\n  useEffect(function () {\n    setItems(items);\n    setItemsLen(items.length ? items.length : 0);\n  }, [items]);\n  useEffect(function () {\n    //set user\n    if (sessionStorage.getItem('key')) {\n      temp = sessionStorage.getItem('key');\n    } else {\n      temp = Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 12);\n      sessionStorage.setItem('key', temp);\n    }\n\n    setUser(temp);\n    GetAllCarts(user, setInstance, setInsLen, setItemCount, setTotal).then(setInitial(true));\n  }, [user]);\n  return /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-columns\"\n  }, items.map(function (item) {\n    return /*#__PURE__*/React.createElement(ItemsInIndex, {\n      item: item,\n      key: item._id\n    });\n  })));\n}\n/* Retrieves item(s) data from mongodb database  */\n\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var result, items;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return dbConnect();\n\n          case 2:\n            _context.next = 4;\n            return Item.find({});\n\n          case 4:\n            result = _context.sent;\n            items = JSON.parse(JSON.stringify(result));\n            return _context.abrupt(\"return\", {\n              props: {\n                items: items\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/index.js"],"names":["useEffect","dbConnect","Layout","Item","ItemsInIndex","useItemsDispatch","useUserDispatch","useUser","useInsDispatch","useInitialDispatch","usefunctions","Index","items","temp","user","setUser","setItems","setItemsLen","setInstance","setInsLen","setItemCount","setTotal","setInitial","GetAllCarts","length","sessionStorage","getItem","Math","random","toString","replace","substr","setItem","then","map","item","_id","getStaticProps","find","result","JSON","parse","stringify","props"],"mappings":"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","sourcesContent":["//import Head from 'next/head';\n//import styles from '../styles/Home.module.css';\nimport { useEffect } from 'react';\nimport dbConnect from '../utils/dbConnect';\nimport Layout from '../components/layout';\nimport Item from '../models/item';\nimport ItemsInIndex from '../components/itemsInIndex';\nimport { useItemsDispatch } from './contexts/ProductsContext';\nimport { useUserDispatch, useUser } from './contexts/userContext';\nimport { useInsDispatch } from './contexts/CartContext';\nimport { useInitialDispatch } from './contexts/initialContext';\nimport { usefunctions } from './contexts/functionContext';\n\nexport default function Index({ items }) {\n  var temp;\n  const user = useUser();\n  const setUser = useUserDispatch();\n\n  const { setItems, setItemsLen } = useItemsDispatch();\n\n  const { setInstance, setInsLen, setItemCount, setTotal } = useInsDispatch();\n\n  const setInitial = useInitialDispatch();\n\n  const { GetAllCarts } = usefunctions();\n\n  useEffect(() => {\n    setItems(items);\n    setItemsLen(items.length ? items.length : 0);\n  }, [items]);\n\n  useEffect(() => {\n    //set user\n    if (sessionStorage.getItem('key')) {\n      temp = sessionStorage.getItem('key');\n    } else {\n      temp = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, '')\n        .substr(0, 12);\n      sessionStorage.setItem('key', temp);\n    }\n    setUser(temp);\n    GetAllCarts(user, setInstance, setInsLen, setItemCount, setTotal).then(\n      setInitial(true)\n    );\n  }, [user]);\n\n  return (\n    <Layout>\n      {/* Create a card for each item */}\n      <div className='card-columns'>\n        {items.map((item) => (\n          <ItemsInIndex item={item} key={item._id} />\n        ))}\n      </div>\n    </Layout>\n  );\n}\n/* Retrieves item(s) data from mongodb database  */\nexport async function getStaticProps() {\n  //export async function getServerSideProps() {\n  await dbConnect();\n\n  // find all the data in our database\n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n\n  return { props: { items: items } };\n}\n"]},"metadata":{},"sourceType":"module"}