{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/store/[id].js\";\nimport { useEffect, useRef, useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport dbConnect from '../../utils/dbConnect';\nimport Item from '../../models/item';\nimport Image from 'next/image'; //import { useInsDispatch } from '../pages/contexts/CartContext';\n//import { useUser } from '../pages/contexts/userContext';\n//import { usefunctions } from '../pages/contexts/functionContext';\n\n/*\nexport default function CartInstances({ iteminstance }) {\n  const router = useRouter();\n  const { id } = router.query;\n  const inputEL = useRef(null);\n  const [incdis, setIncdis] = useState(false);\n  const [decdis, setDecdis] = useState(false);\n  const [dltdis, setDltdis] = useState(false);\n\n  const user = useUser();\n  const { ChangeToCart, DeleteIns, ChangeAddCart } = usefunctions();\n  const { setInstance, setInsLen } = useInsDispatch();\n\n  var a,\n    c = false;\n  var oldValue = iteminstance.quantity;\n  var oldValueforback = iteminstance.quantity;\n\n  const handleCount = (e) => {\n    console.log('oldValueforback: ', oldValueforback);\n    console.log('oldValue: ', oldValue);\n    if (inputEL.current.validity.valid) {\n      if (inputEL.current.value == '') {\n        //this is for empty\n        c = true;\n        a = setTimeout(() => (inputEL.current.value = oldValueforback), 2000);\n      } else {\n        c = false;\n        //this is for number\n        if (a) {\n          clearTimeout(a);\n          a = null;\n        }\n        if (e.nativeEvent.inputType !== 'deleteContentBackward') {\n          oldValueforback = inputEL.current.value;\n        }\n        oldValue = inputEL.current.value;\n      }\n    } else {\n      //this is for invalid\n      if (!c) {\n        //previous is number then use oldValue\n        inputEL.current.value = oldValue;\n        oldValueforback = inputEL.current.value;\n      } else {\n        //previous is \"\" then use oldValueforback\n        inputEL.current.value = oldValueforback;\n        clearTimeout(a);\n        console.log('I am in clear timeout below');\n        a = null;\n        c = false;\n        oldValue = inputEL.current.value;\n      }\n    }\n    setIncdis(parseInt(inputEL.current.value) >= 999);\n    setDecdis(parseInt(inputEL.current.value) <= 1);\n  };\n\n  const handleIncrease = (e) => {\n    setIncdis(true);\n    setDecdis(true);\n    setDltdis(true);\n    inputEL.current.value = parseInt(inputEL.current.value) + 1;\n    //hanle DB -> plus value\n    ChangeAddCart(1, iteminstance._id, user, setInstance, setInsLen).then(\n      () => {\n        console.log('I am in handleIncrease');\n        setIncdis(parseInt(inputEL.current.value) >= 999);\n        setDecdis(parseInt(inputEL.current.value) <= 1);\n        setDltdis(false);\n      }\n    );\n  };\n  const handleDecrease = (e) => {\n    setIncdis(true);\n    setDecdis(true);\n    setDltdis(true);\n    inputEL.current.value = parseInt(inputEL.current.value) - 1;\n    //hanle DB -> minus value\n    ChangeAddCart(-1, iteminstance._id, user, setInstance, setInsLen).then(\n      () => {\n        console.log('I am in handleDecrease');\n        setIncdis(parseInt(inputEL.current.value) >= 999);\n        setDecdis(parseInt(inputEL.current.value) <= 1);\n        setDltdis(false);\n      }\n    );\n  };\n\n  const handlefocus = () => {\n    setIncdis(true);\n    setDecdis(true);\n    setDltdis(true);\n    //handle DB -> change value\n    ChangeToCart(\n      inputEL.current.value,\n      iteminstance._id,\n      user,\n      setInstance,\n      setInsLen\n    ).then(() => {\n      console.log('I am in handlefocus');\n      setIncdis(parseInt(inputEL.current.value) >= 999);\n      setDecdis(parseInt(inputEL.current.value) <= 1);\n      setDltdis(false);\n    });\n  };\n\n  const handleDelIns = () => {\n    DeleteIns(iteminstance._id, user, setInstance, setInsLen);\n  };\n\n  useEffect(() => {\n    setIncdis(parseInt(inputEL.current.value) >= 999);\n    setDecdis(parseInt(inputEL.current.value) <= 1);\n    console.log('I am in effect');\n  }, [user]);\n \n} */\n\nexport default function Post({\n  item\n}) {\n  // Render post...\n  console.log('post: ', item);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: \"col1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: `/${item.image}`,\n          height: 200,\n          width: 200 //  layout='fill'\n\n          /*  style={{\n            display: 'block',\n            margin: '0 auto 10px',\n            height: '200px',\n            width: '200px',\n          }}*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: \"col2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: \"col3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col\",\n          children: \"col4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `/${item.image}`,\n          height: 200,\n          width: 200 //  layout='fill'\n\n          /*  style={{\n            display: 'block',\n            margin: '0 auto 10px',\n            height: '200px',\n            width: '200px',\n          }}*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"item-name\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-left\",\n        children: [\"price: \", item.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-right\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/[id]\",\n          as: `/${item._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn btn-link btn-sm mr-2\",\n            children: \"detail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelIns(item),\n          className: \"btn btn-outline-primary btn-sm disable\" //  disabled={dltdis}\n          ,\n          children: \"Delete Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleIncrease(item),\n          className: \"btn btn-outline-primary btn-sm disable\" // disabled={incdis}\n          ,\n          children: \"+ add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"id1\",\n          type: \"text\" //   ref={inputEL}\n          // onInput={handleCount}\n          //  onBlur={handlefocus}\n          //  onChange={handleCount}\n          ,\n          className: \"form-control input-lg\",\n          pattern: \"[1-9][0-9]*\",\n          style: {\n            width: '100px'\n          },\n          defaultValue: item.quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDecrease(item),\n          className: \"btn btn-outline-primary btn-sm disable\" //  disabled={decdis}\n          ,\n          children: \"- minus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, item._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\nexport async function getStaticPaths() {\n  console.log('I am in [id] getStaticPaths'); //get items from db like index\n  // Call an external API endpoint to get posts\n\n  await dbConnect(); // find all the data in our database\n\n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result)); // Get the paths we want to pre-render based on posts\n\n  const paths = items.map(item => ({\n    params: {\n      id: item._id\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false //fallback: true or false // See the \"fallback\" section below\n\n  };\n} // This also gets called at build time\n\nexport async function getStaticProps({\n  params\n}) {\n  console.log('I am in [id] getStaticProps'); // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n\n  await dbConnect(); // find all the data in our database\n\n  const result = await Item.findById(params.id);\n  const item = JSON.parse(JSON.stringify(result)); // Pass post data to the page via props\n\n  return {\n    props: {\n      item\n    }\n  };\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/store/[id].js"],"names":["useEffect","useRef","useState","Link","useRouter","dbConnect","Item","Image","Post","item","console","log","image","title","price","_id","handleDelIns","handleIncrease","width","quantity","handleDecrease","getStaticPaths","result","find","items","JSON","parse","stringify","paths","map","params","id","fallback","getStaticProps","findById","props"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACrC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,GAAG,EAAG,IAAGA,IAAI,CAACG,KAAM,EADtB;AAEE,UAAA,MAAM,EAAE,GAFV;AAGE,UAAA,KAAK,EAAE,GAHT,CAIE;;AACA;AACZ;AACA;AACA;AACA;AA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","sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport dbConnect from '../../utils/dbConnect';\nimport Item from '../../models/item';\nimport Image from 'next/image';\n//import { useInsDispatch } from '../pages/contexts/CartContext';\n//import { useUser } from '../pages/contexts/userContext';\n//import { usefunctions } from '../pages/contexts/functionContext';\n\n/*\nexport default function CartInstances({ iteminstance }) {\n  const router = useRouter();\n  const { id } = router.query;\n  const inputEL = useRef(null);\n  const [incdis, setIncdis] = useState(false);\n  const [decdis, setDecdis] = useState(false);\n  const [dltdis, setDltdis] = useState(false);\n\n  const user = useUser();\n  const { ChangeToCart, DeleteIns, ChangeAddCart } = usefunctions();\n  const { setInstance, setInsLen } = useInsDispatch();\n\n  var a,\n    c = false;\n  var oldValue = iteminstance.quantity;\n  var oldValueforback = iteminstance.quantity;\n\n  const handleCount = (e) => {\n    console.log('oldValueforback: ', oldValueforback);\n    console.log('oldValue: ', oldValue);\n    if (inputEL.current.validity.valid) {\n      if (inputEL.current.value == '') {\n        //this is for empty\n        c = true;\n        a = setTimeout(() => (inputEL.current.value = oldValueforback), 2000);\n      } else {\n        c = false;\n        //this is for number\n        if (a) {\n          clearTimeout(a);\n          a = null;\n        }\n        if (e.nativeEvent.inputType !== 'deleteContentBackward') {\n          oldValueforback = inputEL.current.value;\n        }\n        oldValue = inputEL.current.value;\n      }\n    } else {\n      //this is for invalid\n      if (!c) {\n        //previous is number then use oldValue\n        inputEL.current.value = oldValue;\n        oldValueforback = inputEL.current.value;\n      } else {\n        //previous is \"\" then use oldValueforback\n        inputEL.current.value = oldValueforback;\n        clearTimeout(a);\n        console.log('I am in clear timeout below');\n        a = null;\n        c = false;\n        oldValue = inputEL.current.value;\n      }\n    }\n    setIncdis(parseInt(inputEL.current.value) >= 999);\n    setDecdis(parseInt(inputEL.current.value) <= 1);\n  };\n\n  const handleIncrease = (e) => {\n    setIncdis(true);\n    setDecdis(true);\n    setDltdis(true);\n    inputEL.current.value = parseInt(inputEL.current.value) + 1;\n    //hanle DB -> plus value\n    ChangeAddCart(1, iteminstance._id, user, setInstance, setInsLen).then(\n      () => {\n        console.log('I am in handleIncrease');\n        setIncdis(parseInt(inputEL.current.value) >= 999);\n        setDecdis(parseInt(inputEL.current.value) <= 1);\n        setDltdis(false);\n      }\n    );\n  };\n  const handleDecrease = (e) => {\n    setIncdis(true);\n    setDecdis(true);\n    setDltdis(true);\n    inputEL.current.value = parseInt(inputEL.current.value) - 1;\n    //hanle DB -> minus value\n    ChangeAddCart(-1, iteminstance._id, user, setInstance, setInsLen).then(\n      () => {\n        console.log('I am in handleDecrease');\n        setIncdis(parseInt(inputEL.current.value) >= 999);\n        setDecdis(parseInt(inputEL.current.value) <= 1);\n        setDltdis(false);\n      }\n    );\n  };\n\n  const handlefocus = () => {\n    setIncdis(true);\n    setDecdis(true);\n    setDltdis(true);\n    //handle DB -> change value\n    ChangeToCart(\n      inputEL.current.value,\n      iteminstance._id,\n      user,\n      setInstance,\n      setInsLen\n    ).then(() => {\n      console.log('I am in handlefocus');\n      setIncdis(parseInt(inputEL.current.value) >= 999);\n      setDecdis(parseInt(inputEL.current.value) <= 1);\n      setDltdis(false);\n    });\n  };\n\n  const handleDelIns = () => {\n    DeleteIns(iteminstance._id, user, setInstance, setInsLen);\n  };\n\n  useEffect(() => {\n    setIncdis(parseInt(inputEL.current.value) >= 999);\n    setDecdis(parseInt(inputEL.current.value) <= 1);\n    console.log('I am in effect');\n  }, [user]);\n \n} */\nexport default function Post({ item }) {\n  // Render post...\n  console.log('post: ', item);\n  return (\n    <>\n      <div key={item._id}>\n        <div class='row'>\n          <div class='col'>col1</div>\n          <Image\n            src={`/${item.image}`}\n            height={200}\n            width={200}\n            //  layout='fill'\n            /*  style={{\n              display: 'block',\n              margin: '0 auto 10px',\n              height: '200px',\n              width: '200px',\n            }}*/\n          />\n          <div class='col'>col2</div>\n        </div>\n        <div class='row'>\n          <div class='col'>col3</div>\n          <div class='col'>col4</div>\n        </div>\n        <div>\n          <Image\n            src={`/${item.image}`}\n            height={200}\n            width={200}\n            //  layout='fill'\n            /*  style={{\n              display: 'block',\n              margin: '0 auto 10px',\n              height: '200px',\n              width: '200px',\n            }}*/\n          />\n        </div>\n        <p className='item-name'>{item.title}</p>\n        <h3 className='text-left'>price: {item.price}</h3>\n        <div className='text-right'>\n          <Link href='/[id]' as={`/${item._id}`}>\n            <a className='btn btn-link btn-sm mr-2'>detail</a>\n          </Link>\n\n          <button\n            onClick={() => handleDelIns(item)}\n            className='btn btn-outline-primary btn-sm disable'\n            //  disabled={dltdis}\n          >\n            Delete Item\n          </button>\n\n          <button\n            onClick={() => handleIncrease(item)}\n            className='btn btn-outline-primary btn-sm disable'\n            // disabled={incdis}\n          >\n            + add\n          </button>\n          <input\n            id='id1'\n            type='text'\n            //   ref={inputEL}\n            // onInput={handleCount}\n            //  onBlur={handlefocus}\n            //  onChange={handleCount}\n            className='form-control input-lg'\n            pattern='[1-9][0-9]*'\n            style={{ width: '100px' }}\n            defaultValue={item.quantity}\n          />\n          <button\n            onClick={() => handleDecrease(item)}\n            className='btn btn-outline-primary btn-sm disable'\n            //  disabled={decdis}\n          >\n            - minus\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport async function getStaticPaths() {\n  console.log('I am in [id] getStaticPaths');\n  //get items from db like index\n  // Call an external API endpoint to get posts\n  await dbConnect();\n\n  // find all the data in our database\n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n  // Get the paths we want to pre-render based on posts\n  const paths = items.map((item) => ({ params: { id: item._id } }));\n\n  // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n  return {\n    paths,\n    fallback: false,\n    //fallback: true or false // See the \"fallback\" section below\n  };\n}\n\n// This also gets called at build time\nexport async function getStaticProps({ params }) {\n  console.log('I am in [id] getStaticProps');\n  // params contains the post `id`.\n  // If the route is like /posts/1, then params.id is 1\n\n  await dbConnect();\n\n  // find all the data in our database\n  const result = await Item.findById(params.id);\n  const item = JSON.parse(JSON.stringify(result));\n\n  // Pass post data to the page via props\n  return { props: { item } };\n}\n"]},"metadata":{},"sourceType":"module"}