{"ast":null,"code":"import mongoose from 'mongoose';\n\nconst {\n  DateTime\n} = require('luxon'); //for date handling\n\n\nvar Schema = mongoose.Schema;\nvar ItemInstanceSchema = new Schema({\n  item: {\n    type: Schema.ObjectId,\n    ref: 'Item',\n    required: true\n  },\n  // Reference to the associated item.\n  user: {\n    type: String,\n    required: true\n  },\n  // Reference to the associated user.\n  //imprint: { type: String, required: true },\n  status: {\n    type: String,\n    required: true,\n    enum: ['Cart', 'Buy', 'Checkout'],\n    default: 'Cart'\n  },\n  quantity: {\n    type: Number,\n    required: true\n  },\n  check: {\n    type: Boolean,\n    default: true\n  },\n  buy_date: {\n    type: Date,\n    default: Date.now()\n  },\n  ordernumber: {\n    type: String\n  },\n  commenttext: {\n    type: String\n  },\n  commenttext1: {\n    type: String\n  },\n  commentimage: [{\n    type: String\n  }]\n}); // Virtual for this iteminstance object's URL.\n\nItemInstanceSchema.virtual('url').get(function () {\n  return '/auth/iteminstance/' + this._id;\n});\nItemInstanceSchema.virtual('buy_date_formatted').get(function () {\n  return DateTime.fromJSDate(this.buy_date).toLocaleString(DateTime.DATE_MED);\n});\nItemInstanceSchema.virtual('buy_date_yyyy_mm_dd').get(function () {\n  return DateTime.fromJSDate(this.buy_date).toISODate(); //format 'YYYY-MM-DD'\n}); // Export model.\n\nexport default mongoose.models.ItemInstance || mongoose.model('ItemInstance', ItemInstanceSchema);","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/models/iteminstance.js"],"names":["mongoose","DateTime","require","Schema","ItemInstanceSchema","item","type","ObjectId","ref","required","user","String","status","enum","default","quantity","Number","check","Boolean","buy_date","Date","now","ordernumber","commenttext","commenttext1","commentimage","virtual","get","_id","fromJSDate","toLocaleString","DATE_MED","toISODate","models","ItemInstance","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAAC,OAAD,CAA5B,C,CAAuC;;;AAEvC,IAAIC,MAAM,GAAGH,QAAQ,CAACG,MAAtB;AAEA,IAAIC,kBAAkB,GAAG,IAAID,MAAJ,CAAW;AAChCE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEH,MAAM,CAACI,QAAf;AAAyBC,IAAAA,GAAG,EAAE,MAA9B;AAAsCC,IAAAA,QAAQ,EAAE;AAAhD,GAD0B;AAC8B;AAC9DC,EAAAA,IAAI,EAAE;AAAEJ,IAAAA,IAAI,EAAEK,MAAR;AAAgBF,IAAAA,QAAQ,EAAE;AAA1B,GAF0B;AAEQ;AACxC;AACAG,EAAAA,MAAM,EAAE;AACJN,IAAAA,IAAI,EAAEK,MADF;AAEJF,IAAAA,QAAQ,EAAE,IAFN;AAGJI,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,UAAhB,CAHF;AAIJC,IAAAA,OAAO,EAAE;AAJL,GAJwB;AAUhCC,EAAAA,QAAQ,EAAE;AAAET,IAAAA,IAAI,EAAEU,MAAR;AAAgBP,IAAAA,QAAQ,EAAE;AAA1B,GAVsB;AAWhCQ,EAAAA,KAAK,EAAE;AAAEX,IAAAA,IAAI,EAAEY,OAAR;AAAiBJ,IAAAA,OAAO,EAAE;AAA1B,GAXyB;AAYhCK,EAAAA,QAAQ,EAAE;AAAEb,IAAAA,IAAI,EAAEc,IAAR;AAAcN,IAAAA,OAAO,EAAEM,IAAI,CAACC,GAAL;AAAvB,GAZsB;AAahCC,EAAAA,WAAW,EAAE;AAAEhB,IAAAA,IAAI,EAAEK;AAAR,GAbmB;AAchCY,EAAAA,WAAW,EAAE;AAAEjB,IAAAA,IAAI,EAAEK;AAAR,GAdmB;AAehCa,EAAAA,YAAY,EAAE;AAAElB,IAAAA,IAAI,EAAEK;AAAR,GAfkB;AAgBhCc,EAAAA,YAAY,EAAE,CAAC;AAAEnB,IAAAA,IAAI,EAAEK;AAAR,GAAD;AAhBkB,CAAX,CAAzB,C,CAmBA;;AACAP,kBAAkB,CAACsB,OAAnB,CAA2B,KAA3B,EAAkCC,GAAlC,CAAsC,YAAY;AAC9C,SAAO,wBAAwB,KAAKC,GAApC;AACH,CAFD;AAIAxB,kBAAkB,CAACsB,OAAnB,CAA2B,oBAA3B,EAAiDC,GAAjD,CAAqD,YAAY;AAC7D,SAAO1B,QAAQ,CAAC4B,UAAT,CAAoB,KAAKV,QAAzB,EAAmCW,cAAnC,CAAkD7B,QAAQ,CAAC8B,QAA3D,CAAP;AACH,CAFD;AAIA3B,kBAAkB,CAACsB,OAAnB,CAA2B,qBAA3B,EAAkDC,GAAlD,CAAsD,YAAY;AAC9D,SAAO1B,QAAQ,CAAC4B,UAAT,CAAoB,KAAKV,QAAzB,EAAmCa,SAAnC,EAAP,CAD8D,CACP;AAC1D,CAFD,E,CAIA;;AACA,eAAehC,QAAQ,CAACiC,MAAT,CAAgBC,YAAhB,IACXlC,QAAQ,CAACmC,KAAT,CAAe,cAAf,EAA+B/B,kBAA/B,CADJ","sourcesContent":["import mongoose from 'mongoose';\nconst { DateTime } = require('luxon'); //for date handling\n\nvar Schema = mongoose.Schema;\n\nvar ItemInstanceSchema = new Schema({\n    item: { type: Schema.ObjectId, ref: 'Item', required: true }, // Reference to the associated item.\n    user: { type: String, required: true }, // Reference to the associated user.\n    //imprint: { type: String, required: true },\n    status: {\n        type: String,\n        required: true,\n        enum: ['Cart', 'Buy', 'Checkout'],\n        default: 'Cart',\n    },\n    quantity: { type: Number, required: true },\n    check: { type: Boolean, default: true },\n    buy_date: { type: Date, default: Date.now() },\n    ordernumber: { type: String },\n    commenttext: { type: String },\n    commenttext1: { type: String },\n    commentimage: [{ type: String }],\n});\n\n// Virtual for this iteminstance object's URL.\nItemInstanceSchema.virtual('url').get(function () {\n    return '/auth/iteminstance/' + this._id;\n});\n\nItemInstanceSchema.virtual('buy_date_formatted').get(function () {\n    return DateTime.fromJSDate(this.buy_date).toLocaleString(DateTime.DATE_MED);\n});\n\nItemInstanceSchema.virtual('buy_date_yyyy_mm_dd').get(function () {\n    return DateTime.fromJSDate(this.buy_date).toISODate(); //format 'YYYY-MM-DD'\n});\n\n// Export model.\nexport default mongoose.models.ItemInstance ||\n    mongoose.model('ItemInstance', ItemInstanceSchema);\n"]},"metadata":{},"sourceType":"module"}