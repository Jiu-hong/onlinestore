{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/components/Counter.js\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useReducer, useContext, createContext } from 'react';\nvar CounterStateContext = /*#__PURE__*/createContext();\nvar CounterDispatchContext = /*#__PURE__*/createContext();\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'INCREASE':\n      return state + 1;\n\n    case 'DECREASE':\n      return state - 1;\n\n    case 'INCREASE_BY':\n      return state + action.payload;\n\n    default:\n      throw new Error(\"Unknown action: \".concat(action.type));\n  }\n};\n\nexport var CounterProvider = function CounterProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, 0),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return /*#__PURE__*/_jsxDEV(CounterDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CounterStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CounterProvider, \"XdOxjII3FbxRSAmkiOVToHX85/8=\");\n\n_c = CounterProvider;\nexport var useCount = function useCount() {\n  _s2();\n\n  return useContext(CounterStateContext);\n};\n\n_s2(useCount, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport var useDispatchCount = function useDispatchCount() {\n  _s3();\n\n  return useContext(CounterDispatchContext);\n};\n\n_s3(useDispatchCount, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterProvider\");","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/components/Counter.js"],"names":["useReducer","useContext","createContext","CounterStateContext","CounterDispatchContext","reducer","state","action","type","payload","Error","CounterProvider","children","dispatch","useCount","useDispatchCount"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,EAAqBC,UAArB,EAAiCC,aAAjC,QAAsD,OAAtD;AAEA,IAAMC,mBAAmB,gBAAGD,aAAa,EAAzC;AACA,IAAME,sBAAsB,gBAAGF,aAAa,EAA5C;;AAEA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAOF,KAAK,GAAG,CAAf;;AACF,SAAK,UAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF,SAAK,aAAL;AACE,aAAOA,KAAK,GAAGC,MAAM,CAACE,OAAtB;;AACF;AACE,YAAM,IAAIC,KAAJ,2BAA6BH,MAAM,CAACC,IAApC,EAAN;AARJ;AAUD,CAXD;;AAaA,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,oBACrBZ,UAAU,CAACK,OAAD,EAAU,CAAV,CADW;AAAA,MACxCC,KADwC;AAAA,MACjCO,QADiC;;AAE/C,sBACE,QAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEA,QAAxC;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEP,KAArC;AAAA,gBACGM;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CATM;;GAAMD,e;;KAAAA,e;AAWb,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW;AAAA;;AAAA,SAAMb,UAAU,CAACE,mBAAD,CAAhB;AAAA,CAAjB;;IAAMW,Q;;AACb,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;;AAAA,SAAMd,UAAU,CAACG,sBAAD,CAAhB;AAAA,CAAzB;;IAAMW,gB","sourcesContent":["import { useReducer, useContext, createContext } from 'react';\n\nconst CounterStateContext = createContext();\nconst CounterDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREASE':\n      return state + 1;\n    case 'DECREASE':\n      return state - 1;\n    case 'INCREASE_BY':\n      return state + action.payload;\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const CounterProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, 0);\n  return (\n    <CounterDispatchContext.Provider value={dispatch}>\n      <CounterStateContext.Provider value={state}>\n        {children}\n      </CounterStateContext.Provider>\n    </CounterDispatchContext.Provider>\n  );\n};\n\nexport const useCount = () => useContext(CounterStateContext);\nexport const useDispatchCount = () => useContext(CounterDispatchContext);\n"]},"metadata":{},"sourceType":"module"}