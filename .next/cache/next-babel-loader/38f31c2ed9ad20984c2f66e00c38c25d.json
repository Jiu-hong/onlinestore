{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/globals.css';\nimport Item from '../models/Item';\nimport dbConnect from '../utils/dbConnect';\nimport App from 'next/app';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, items), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n\nMyApp.getInitialProps = async appContext => {\n  //calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  console.log('appProps: ', appProps);\n  await dbConnect();\n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n  return {\n    appProps: {\n      pageProps: {\n        statusCode: 500,\n        items\n      }\n    }\n  };\n};\n/*\nexport async function getStaticProps() {\n  //export async function getServerSideProps() {\n  await dbConnect();\n\n  /* find all the data in our database \n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n\n  return { props: { pageProps: items } };\n}\n*/\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/_app.js"],"names":["Item","dbConnect","App","MyApp","Component","pageProps","items","getInitialProps","appContext","appProps","console","log","result","find","JSON","parse","stringify","statusCode"],"mappings":";;;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,GAAP,MAAgB,UAAhB;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,C,CAED;AACA;AACA;AACA;;;AAEAH,KAAK,CAACI,eAAN,GAAwB,MAAOC,UAAP,IAAsB;AAC5C;AACA,QAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACK,eAAJ,CAAoBC,UAApB,CAAvB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AACA,QAAMR,SAAS,EAAf;AAEA,QAAMW,MAAM,GAAG,MAAMZ,IAAI,CAACa,IAAL,CAAU,EAAV,CAArB;AACA,QAAMP,KAAK,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,MAAf,CAAX,CAAd;AACA,SAAO;AAAEH,IAAAA,QAAQ,EAAE;AAAEJ,MAAAA,SAAS,EAAE;AAAEY,QAAAA,UAAU,EAAE,GAAd;AAAmBX,QAAAA;AAAnB;AAAb;AAAZ,GAAP;AACD,CATD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeH,KAAf","sourcesContent":["import '../styles/globals.css';\nimport Item from '../models/Item';\nimport dbConnect from '../utils/dbConnect';\nimport App from 'next/app';\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <>\n      <div className='grid wrapper'>\n        <Component {...items} />\n      </div>\n    </>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\nMyApp.getInitialProps = async (appContext) => {\n  //calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  console.log('appProps: ', appProps);\n  await dbConnect();\n\n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n  return { appProps: { pageProps: { statusCode: 500, items } } };\n};\n/*\nexport async function getStaticProps() {\n  //export async function getServerSideProps() {\n  await dbConnect();\n\n  /* find all the data in our database \n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n\n  return { props: { pageProps: items } };\n}\n*/\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}