{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nexport var FunctionContext = /*#__PURE__*/createContext();\n\nvar GetAllCarts = function GetAllCarts(parms, howto) {\n  fetch('api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parms\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (result) {\n    howto(result.data);\n  })[\"catch\"](new Error());\n};\n\n_c = GetAllCarts;\n\nvar AddToCart = function AddToCart(parmsuser) {\n  fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: 1,\n      itemid: action.payload._id,\n      user: parmsuser\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log('data: ', data);\n  })[\"catch\"](new Error());\n};\n\n_c2 = AddToCart;\n\nvar FunctionContextProvider = function FunctionContextProvider(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/_jsxDEV(FunctionContext.Provider, {\n    value: {\n      GetAllCarts: GetAllCarts,\n      AddToCart: AddToCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this);\n};\n\n_c3 = FunctionContextProvider;\nexport var usefunctions = function usefunctions() {\n  _s();\n\n  return useContext(FunctionContext);\n};\n\n_s(usefunctions, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default FunctionContextProvider;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"GetAllCarts\");\n$RefreshReg$(_c2, \"AddToCart\");\n$RefreshReg$(_c3, \"FunctionContextProvider\");","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js"],"names":["React","createContext","useContext","FunctionContext","GetAllCarts","parms","howto","fetch","method","body","JSON","stringify","user","then","response","json","result","data","Error","AddToCart","parmsuser","count","itemid","action","payload","_id","console","log","FunctionContextProvider","children","usefunctions"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,OAAO,IAAMC,eAAe,gBAAGF,aAAa,EAArC;;AAEP,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACpCC,EAAAA,KAAK,CAAC,0BAAD,EAA6B;AAChCC,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,IAAI,EAAEP;AADa,KAAf;AAF0B,GAA7B,CAAL,CAMGQ,IANH,CAMQ,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GANR,EAOGF,IAPH,CAOQ,UAACG,MAAD,EAAY;AAChBV,IAAAA,KAAK,CAACU,MAAM,CAACC,IAAR,CAAL;AACD,GATH,WAUS,IAAIC,KAAJ,EAVT;AAWD,CAZD;;KAAMd,W;;AAcN,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAe;AAC/Bb,EAAAA,KAAK,CAAC,0BAAD,EAA6B;AAChCC,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBU,MAAAA,KAAK,EAAE,CADY;AAEnBC,MAAAA,MAAM,EAAEC,MAAM,CAACC,OAAP,CAAeC,GAFJ;AAGnBb,MAAAA,IAAI,EAAEQ;AAHa,KAAf;AAF0B,GAA7B,CAAL,CAQGP,IARH,CAQQ,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GARR,EASGF,IATH,CASQ,UAACI,IAAD,EAAU;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBV,IAAtB;AACD,GAXH,WAYS,IAAIC,KAAJ,EAZT;AAaD,CAdD;;MAAMC,S;;AAgBN,IAAMS,uBAAuB,GAAG,SAA1BA,uBAA0B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChD,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEzB,MAAAA,WAAW,EAAXA,WAAF;AAAee,MAAAA,SAAS,EAATA;AAAf,KAAjC;AAAA,cACGU;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAND;;MAAMD,uB;AAQN,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe;AAAA;;AAAA,SAAM5B,UAAU,CAACC,eAAD,CAAhB;AAAA,CAArB;;GAAM2B,Y;;AACb,eAAeF,uBAAf","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const FunctionContext = createContext();\n\nconst GetAllCarts = (parms, howto) => {\n  fetch('api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parms,\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      howto(result.data);\n    })\n    .catch(new Error());\n};\n\nconst AddToCart = (parmsuser) => {\n  fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: 1,\n      itemid: action.payload._id,\n      user: parmsuser,\n    }),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log('data: ', data);\n    })\n    .catch(new Error());\n};\n\nconst FunctionContextProvider = ({ children }) => {\n  return (\n    <FunctionContext.Provider value={{ GetAllCarts, AddToCart }}>\n      {children}\n    </FunctionContext.Provider>\n  );\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;\n"]},"metadata":{},"sourceType":"module"}