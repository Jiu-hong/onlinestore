{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js\",\n    _s = $RefreshSig$();\n\nimport styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react'; //import Layout from '../components/layout';\n\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nexport default function About() {\n  _s();\n\n  var _useState = useState(null),\n      images = _useState[0],\n      setImages = _useState[1];\n\n  useEffect(function () {\n    var shouldCancel = false;\n    fetch('https://google-photos-album-demo2.glitch.me/4eXXxxG3rYwQVf948').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (!shouldCancel && response.json() && response.json().length > 0) {\n        setImages(response.data.map(function (url) {\n          return {\n            original: \"\".concat(url, \"=w1024\"),\n            thumbnail: \"\".concat(url, \"=w100\")\n          };\n        }));\n      }\n    });\n    /*  if (\n            !shouldCancel &&\n            response.json() &&\n            response.json().length > 0\n        ) {\n            setImages(\n                response.data.map((url) => ({\n                    original: `${url}=w1024`,\n                    thumbnail: `${url}=w100`,\n                }))\n            );\n        }*/\n\n    return function () {\n      return shouldCancel = true;\n    };\n  }, []);\n  return images ? /*#__PURE__*/_jsxDEV(ImageGallery, {\n    items: images\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this) : null;\n}\n\n_s(About, \"1vh5OZMc1B9DNsrOB9lCRib8LTI=\");\n\n_c = About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/about.js"],"names":["styles","useState","useEffect","ImageGallery","About","images","setImages","shouldCancel","fetch","then","response","json","data","length","map","url","original","thumbnail"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,8BAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,kDAAP;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACAH,QAAQ,CAAC,IAAD,CADR;AAAA,MACrBI,MADqB;AAAA,MACbC,SADa;;AAG5BJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,YAAY,GAAG,KAAnB;AAEAC,IAAAA,KAAK,CAAC,+DAAD,CAAL,CACKC,IADL,CACU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADV,EAEKF,IAFL,CAEU,UAACG,IAAD,EAAU;AACZ,UACI,CAACL,YAAD,IACAG,QAAQ,CAACC,IAAT,EADA,IAEAD,QAAQ,CAACC,IAAT,GAAgBE,MAAhB,GAAyB,CAH7B,EAIE;AACEP,QAAAA,SAAS,CACLI,QAAQ,CAACE,IAAT,CAAcE,GAAd,CAAkB,UAACC,GAAD;AAAA,iBAAU;AACxBC,YAAAA,QAAQ,YAAKD,GAAL,WADgB;AAExBE,YAAAA,SAAS,YAAKF,GAAL;AAFe,WAAV;AAAA,SAAlB,CADK,CAAT;AAMH;AACJ,KAfL;AAiBA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,WAAO;AAAA,aAAOR,YAAY,GAAG,IAAtB;AAAA,KAAP;AACH,GAlCQ,EAkCN,EAlCM,CAAT;AAoCA,SAAOF,MAAM,gBAAG,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAH,GAAqC,IAAlD;AACH;;GAxCuBD,K;;KAAAA,K","sourcesContent":["import styles from './contact/contact.module.css';\nimport { useState, useEffect } from 'react';\n\n//import Layout from '../components/layout';\nimport ImageGallery from 'react-image-gallery';\nimport 'react-image-gallery/styles/css/image-gallery.css';\n\nexport default function About() {\n    const [images, setImages] = useState(null);\n\n    useEffect(() => {\n        let shouldCancel = false;\n\n        fetch('https://google-photos-album-demo2.glitch.me/4eXXxxG3rYwQVf948')\n            .then((response) => response.json())\n            .then((data) => {\n                if (\n                    !shouldCancel &&\n                    response.json() &&\n                    response.json().length > 0\n                ) {\n                    setImages(\n                        response.data.map((url) => ({\n                            original: `${url}=w1024`,\n                            thumbnail: `${url}=w100`,\n                        }))\n                    );\n                }\n            });\n\n        /*  if (\n                !shouldCancel &&\n                response.json() &&\n                response.json().length > 0\n            ) {\n                setImages(\n                    response.data.map((url) => ({\n                        original: `${url}=w1024`,\n                        thumbnail: `${url}=w100`,\n                    }))\n                );\n            }*/\n\n        return () => (shouldCancel = true);\n    }, []);\n\n    return images ? <ImageGallery items={images} /> : null;\n}\n"]},"metadata":{},"sourceType":"module"}