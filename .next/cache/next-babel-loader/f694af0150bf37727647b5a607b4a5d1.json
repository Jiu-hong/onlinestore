{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js\";\nimport React, { createContext, useContext } from 'react';\nexport const FunctionContext = /*#__PURE__*/createContext();\n\nconst PostComment = (formData, orders, forder, fn) => {\n  return fetch('/api/user_comment_post', {\n    method: 'post',\n    body: formData\n  }).then(response => response.json()).then(result => {\n    if (result.status === 500) {\n      fn(result.error);\n    } else {\n      var neworder = result.data;\n      var index = orders.findIndex(oldorder => oldorder._id === neworder._id);\n      ins_cart.splice(index, 1, newins);\n      fnins(ins_cart);\n      fn([]);\n    }\n\n    return result;\n  }) // .then((res) => fno(res))\n  .catch(err => new Error(err));\n};\n\nconst GetAllOrder = (parmsuser, fno) => {\n  return fetch('/api/user_order_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => result.data).then(res => fno(res)).catch(new Error());\n};\n\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chckout_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    fnins(result.data);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(result.data);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst sumItems = instances => {\n  var checkedInstances = instances.filter(instance => instance.check === true);\n  let itemCount = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.quantity, 0);\n  let total = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.item.price * checkedInstance.quantity, 0).toFixed(2);\n  console.log('itemCount in sunItems: ', itemCount);\n  return {\n    itemCount,\n    total\n  };\n};\n\nconst ChgChk = (parmscheck, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chkchg_post', {\n    method: 'post',\n    body: JSON.stringify({\n      check: parmscheck,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_deleteins_post', {\n    method: 'post',\n    body: JSON.stringify({\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(() => {\n    var index = ins_cart.findIndex(oldins => oldins._id === parmsid);\n    ins_cart.splice(index, 1);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst ChangeAddCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changeAddcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst ChangeToCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changetocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    // result is newins\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst checkdb = () => {\n  return fetch('/api/del_carts_all').then(console.log('delete success in function')).catch(err => new Error(err));\n};\n\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  if (!parmsuser) return Promise.reject('no user');\n  return fetch('/api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins_cart = result.data;\n    fnins(newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n    console.log('count: ', itemCount);\n    console.log('total: ', total);\n  }).catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, oldins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins = result.data; // now the result is new iteminstance\n\n    var newins_cart = oldins_cart.filter(oldins => oldins._id !== newins._id);\n    newins_cart.unshift(newins);\n    fnins(newins_cart);\n    console.log('newins_cart: ', newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst FunctionContextProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(FunctionContext.Provider, {\n    value: {\n      GetAllCarts,\n      AddToCart,\n      checkdb,\n      ChangeToCart,\n      ChangeAddCart,\n      DeleteIns,\n      ChgChk,\n      checkOut,\n      GetAllOrder,\n      PostComment\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 9\n  }, this);\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js"],"names":["React","createContext","useContext","FunctionContext","PostComment","formData","orders","forder","fn","fetch","method","body","then","response","json","result","status","error","neworder","data","index","findIndex","oldorder","_id","ins_cart","splice","newins","fnins","catch","err","Error","GetAllOrder","parmsuser","fno","JSON","stringify","user","res","checkOut","fnlen","fnc","fnt","reducer","accumulator","currentValue","quantity","inslen","reduce","itemCount","total","sumItems","instances","checkedInstances","filter","instance","check","checkedInstance","item","price","toFixed","console","log","ChgChk","parmscheck","parmsid","instanceid","oldins","DeleteIns","ChangeAddCart","parmscount","count","ChangeToCart","checkdb","GetAllCarts","Promise","reject","newins_cart","AddToCart","oldins_cart","itemid","unshift","FunctionContextProvider","children","usefunctions"],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const FunctionContext = createContext();\n\nconst PostComment = (formData, orders, forder, fn) => {\n    return (\n        fetch('/api/user_comment_post', {\n            method: 'post',\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                if (result.status === 500) {\n                    fn(result.error);\n                } else {\n                    var neworder = result.data;\n\n                    var index = orders.findIndex(\n                        (oldorder) => oldorder._id === neworder._id\n                    );\n\n                    ins_cart.splice(index, 1, newins);\n\n                    fnins(ins_cart);\n\n                    fn([]);\n                }\n                return result;\n            })\n            // .then((res) => fno(res))\n            .catch((err) => new Error(err))\n    );\n};\nconst GetAllOrder = (parmsuser, fno) => {\n    return fetch('/api/user_order_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => result.data)\n        .then((res) => fno(res))\n        .catch(new Error());\n};\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_chckout_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            fnins(result.data);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(result.data);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst sumItems = (instances) => {\n    var checkedInstances = instances.filter(\n        (instance) => instance.check === true\n    );\n\n    let itemCount = checkedInstances.reduce(\n        (total, checkedInstance) => total + checkedInstance.quantity,\n        0\n    );\n    let total = checkedInstances\n        .reduce(\n            (total, checkedInstance) =>\n                total + checkedInstance.item.price * checkedInstance.quantity,\n            0\n        )\n        .toFixed(2);\n    console.log('itemCount in sunItems: ', itemCount);\n    return { itemCount, total };\n};\nconst ChgChk = (\n    parmscheck,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_chkchg_post', {\n        method: 'post',\n        body: JSON.stringify({\n            check: parmscheck,\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins = result.data;\n            var index = ins_cart.findIndex(\n                (oldins) => oldins._id === newins._id\n            );\n\n            ins_cart.splice(index, 1, newins);\n\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_deleteins_post', {\n        method: 'post',\n        body: JSON.stringify({\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then(() => {\n            var index = ins_cart.findIndex((oldins) => oldins._id === parmsid);\n\n            ins_cart.splice(index, 1);\n\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst ChangeAddCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_changeAddcart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins = result.data;\n\n            var index = ins_cart.findIndex(\n                (oldins) => oldins._id === newins._id\n            );\n\n            ins_cart.splice(index, 1, newins);\n\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst ChangeToCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_changetocart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            // result is newins\n            var newins = result.data;\n            var index = ins_cart.findIndex(\n                (oldins) => oldins._id === newins._id\n            );\n            ins_cart.splice(index, 1, newins);\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\nconst checkdb = () => {\n    return fetch('/api/del_carts_all')\n        .then(console.log('delete success in function'))\n        .catch((err) => new Error(err));\n};\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n    if (!parmsuser) return Promise.reject('no user');\n    return fetch('/api/user_getallcart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins_cart = result.data;\n            fnins(newins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(newins_cart);\n            fnc(itemCount);\n            fnt(total);\n            console.log('count: ', itemCount);\n            console.log('total: ', total);\n        })\n        .catch(new Error());\n};\n\nconst AddToCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    oldins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_addtocart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            itemid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins = result.data;\n            // now the result is new iteminstance\n            var newins_cart = oldins_cart.filter(\n                (oldins) => oldins._id !== newins._id\n            );\n            newins_cart.unshift(newins);\n\n            fnins(newins_cart);\n            console.log('newins_cart: ', newins_cart);\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = newins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(newins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst FunctionContextProvider = ({ children }) => {\n    return (\n        <FunctionContext.Provider\n            value={{\n                GetAllCarts,\n                AddToCart,\n                checkdb,\n                ChangeToCart,\n                ChangeAddCart,\n                DeleteIns,\n                ChgChk,\n                checkOut,\n                GetAllOrder,\n                PostComment,\n            }}\n        >\n            {children}\n        </FunctionContext.Provider>\n    );\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;\n"]},"metadata":{},"sourceType":"module"}