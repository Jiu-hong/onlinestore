{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/CartContext.js\";\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { useUser, useUserDispatch } from '../contexts/userContext';\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartContext1 = /*#__PURE__*/createContext();\nconst UserDispatch = useUserDispatch();\nconst user = useUser();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREASE':\n      {\n        UserDispatch({\n          type: 'GETUSER'\n        });\n        fetch('/api/user_addtocart_post', {\n          method: 'post',\n          body: JSON.stringify({\n            count: 1,\n            itemid: action.payload._id,\n            user: user\n          })\n        }).then(response => response.json()).then(data => {\n          console.log('data: ', data);\n        });\n        console.log('state: in CartContext', state);\n        return state + 1;\n      }\n\n    case 'DECREASE':\n      return state - 1;\n\n    case 'INCREASE_BY':\n      return JSON.parse(JSON.stringify(action.payload));\n\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CartContextProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, 0);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(CartContext1.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\nexport const useInstance = () => useContext(CartContext);\nexport const useInstanceDispatch = () => useContext(CartContext1);\nexport default CartContextProvider;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/CartContext.js"],"names":["React","createContext","useContext","useReducer","useUser","useUserDispatch","CartContext","CartContext1","UserDispatch","user","reducer","state","action","type","fetch","method","body","JSON","stringify","count","itemid","payload","_id","then","response","json","data","console","log","parse","Error","CartContextProvider","children","dispatch","useInstance","useInstanceDispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,yBAAzC;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AACP,OAAO,MAAMM,YAAY,gBAAGN,aAAa,EAAlC;AAEP,MAAMO,YAAY,GAAGH,eAAe,EAApC;AACA,MAAMI,IAAI,GAAGL,OAAO,EAApB;;AAEA,MAAMM,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AAAiB;AACfL,QAAAA,YAAY,CAAC;AACXK,UAAAA,IAAI,EAAE;AADK,SAAD,CAAZ;AAGAC,QAAAA,KAAK,CAAC,0BAAD,EAA6B;AAChCC,UAAAA,MAAM,EAAE,MADwB;AAEhCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,YAAAA,KAAK,EAAE,CADY;AAEnBC,YAAAA,MAAM,EAAER,MAAM,CAACS,OAAP,CAAeC,GAFJ;AAGnBb,YAAAA,IAAI,EAAEA;AAHa,WAAf;AAF0B,SAA7B,CAAL,CAQGc,IARH,CAQSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARtB,EASGF,IATH,CASSG,IAAD,IAAU;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;AACD,SAXH;AAYAC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCjB,KAArC;AACA,eAAOA,KAAK,GAAG,CAAf;AACD;;AAED,SAAK,UAAL;AACE,aAAOA,KAAK,GAAG,CAAf;;AACF,SAAK,aAAL;AACE,aAAOM,IAAI,CAACY,KAAL,CAAWZ,IAAI,CAACC,SAAL,CAAeN,MAAM,CAACS,OAAtB,CAAX,CAAP;;AACF;AACE,YAAM,IAAIS,KAAJ,CAAW,mBAAkBlB,MAAM,CAACC,IAAK,EAAzC,CAAN;AA1BJ;AA4BD,CA7BD;;AA8BA,MAAMkB,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM;AAAA,OAACrB,KAAD;AAAA,OAAQsB;AAAR,MAAoB9B,UAAU,CAACO,OAAD,EAAU,CAAV,CAApC;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA,2BACE,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAEsB,QAA9B;AAAA,gBAAyCD;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;AAUA,OAAO,MAAME,WAAW,GAAG,MAAMhC,UAAU,CAACI,WAAD,CAApC;AACP,OAAO,MAAM6B,mBAAmB,GAAG,MAAMjC,UAAU,CAACK,YAAD,CAA5C;AACP,eAAewB,mBAAf","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport { useUser, useUserDispatch } from '../contexts/userContext';\n\nexport const CartContext = createContext();\nexport const CartContext1 = createContext();\n\nconst UserDispatch = useUserDispatch();\nconst user = useUser();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INCREASE': {\n      UserDispatch({\n        type: 'GETUSER',\n      });\n      fetch('/api/user_addtocart_post', {\n        method: 'post',\n        body: JSON.stringify({\n          count: 1,\n          itemid: action.payload._id,\n          user: user,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log('data: ', data);\n        });\n      console.log('state: in CartContext', state);\n      return state + 1;\n    }\n\n    case 'DECREASE':\n      return state - 1;\n    case 'INCREASE_BY':\n      return JSON.parse(JSON.stringify(action.payload));\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\nconst CartContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, 0);\n\n  return (\n    <CartContext.Provider value={state}>\n      <CartContext1.Provider value={dispatch}>{children}</CartContext1.Provider>\n    </CartContext.Provider>\n  );\n};\n\nexport const useInstance = () => useContext(CartContext);\nexport const useInstanceDispatch = () => useContext(CartContext1);\nexport default CartContextProvider;\n"]},"metadata":{},"sourceType":"module"}