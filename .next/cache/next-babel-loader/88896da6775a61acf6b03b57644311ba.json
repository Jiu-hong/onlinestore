{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js\";\nimport React, { createContext, useContext } from 'react';\nexport const FunctionContext = /*#__PURE__*/createContext();\n\nconst PostComment = (formData, fn) => {\n  return fetch('/api/user_comment_post', {\n    method: 'post',\n    body: formData\n  }).then(response => response.json()).then(result => {\n    if (result.status === 500) {\n      fn(result.error);\n    } else {\n      fn([]);\n    }\n\n    return result;\n  }) // .then((res) => fno(res))\n  .catch(err => new Error(err));\n};\n\nconst GetAllOrder = (parmsuser, fno) => {\n  return fetch('/api/user_order_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => result.data).then(res => fno(res)).catch(new Error());\n};\n\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chckout_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    fnins(result.data);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(result.data);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst sumItems = instances => {\n  var checkedInstances = instances.filter(instance => instance.check === true);\n  let itemCount = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.quantity, 0);\n  let total = checkedInstances.reduce((total, checkedInstance) => total + checkedInstance.item.price * checkedInstance.quantity, 0).toFixed(2);\n  console.log('itemCount in sunItems: ', itemCount);\n  return {\n    itemCount,\n    total\n  };\n};\n\nconst ChgChk = (parmscheck, parmsid, parmsuser, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_chkchg_post', {\n    method: 'post',\n    body: JSON.stringify({\n      check: parmscheck,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    fnins(result.data);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(result.data);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_deleteins_post', {\n    method: 'post',\n    body: JSON.stringify({\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(() => {\n    var index = ins_cart.findIndex(oldins => oldins._id === parmsid._id);\n    ins_cart.splice(index, 1);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst ChangeAddCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changeAddcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst ChangeToCart = (parmscount, parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_changetocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      instanceid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    // result is newins\n    var newins = result.data;\n    var index = ins_cart.findIndex(oldins => oldins._id === newins._id);\n    ins_cart.splice(index, 1, newins);\n    fnins(ins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = ins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(ins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst checkdb = () => {\n  return fetch('/api/del_carts_all').then(console.log('delete success in function')).catch(err => new Error(err));\n};\n\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n  if (!parmsuser) return Promise.reject('no user');\n  return fetch('/api/user_getallcart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins_cart = result.data;\n    fnins(newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n    console.log('count: ', itemCount);\n    console.log('total: ', total);\n  }).catch(new Error());\n};\n\nconst AddToCart = (parmscount, parmsid, parmsuser, oldins_cart, fnins, fnlen, fnc, fnt) => {\n  return fetch('/api/user_addtocart_post', {\n    method: 'post',\n    body: JSON.stringify({\n      count: parmscount,\n      itemid: parmsid,\n      user: parmsuser\n    })\n  }).then(response => response.json()).then(result => {\n    var newins = result.data; // now the result is new iteminstance\n\n    var newins_cart = oldins_cart.filter(oldins => oldins._id !== newins._id);\n    newins_cart.unshift(newins);\n    fnins(newins_cart);\n    console.log('newins_cart: ', newins_cart);\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue.quantity;\n\n    var inslen = newins_cart.reduce(reducer, 0);\n    fnlen(inslen);\n    var {\n      itemCount,\n      total\n    } = sumItems(newins_cart);\n    fnc(itemCount);\n    fnt(total);\n  }).catch(new Error());\n};\n\nconst FunctionContextProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(FunctionContext.Provider, {\n    value: {\n      GetAllCarts,\n      AddToCart,\n      checkdb,\n      ChangeToCart,\n      ChangeAddCart,\n      DeleteIns,\n      ChgChk,\n      checkOut,\n      GetAllOrder,\n      PostComment\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 9\n  }, this);\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/contexts/functionContext.js"],"names":["React","createContext","useContext","FunctionContext","PostComment","formData","fn","fetch","method","body","then","response","json","result","status","error","catch","err","Error","GetAllOrder","parmsuser","fno","JSON","stringify","user","data","res","checkOut","fnins","fnlen","fnc","fnt","reducer","accumulator","currentValue","quantity","inslen","reduce","itemCount","total","sumItems","instances","checkedInstances","filter","instance","check","checkedInstance","item","price","toFixed","console","log","ChgChk","parmscheck","parmsid","instanceid","DeleteIns","ins_cart","index","findIndex","oldins","_id","splice","ChangeAddCart","parmscount","count","newins","ChangeToCart","checkdb","GetAllCarts","Promise","reject","newins_cart","AddToCart","oldins_cart","itemid","unshift","FunctionContextProvider","children","usefunctions"],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nexport const FunctionContext = createContext();\n\nconst PostComment = (formData, fn) => {\n    return (\n        fetch('/api/user_comment_post', {\n            method: 'post',\n            body: formData,\n        })\n            .then((response) => response.json())\n            .then((result) => {\n                if (result.status === 500) {\n                    fn(result.error);\n                } else {\n                    fn([]);\n                }\n                return result;\n            })\n            // .then((res) => fno(res))\n            .catch((err) => new Error(err))\n    );\n};\nconst GetAllOrder = (parmsuser, fno) => {\n    return fetch('/api/user_order_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => result.data)\n        .then((res) => fno(res))\n        .catch(new Error());\n};\nconst checkOut = (parmsuser, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_chckout_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            fnins(result.data);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(result.data);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst sumItems = (instances) => {\n    var checkedInstances = instances.filter(\n        (instance) => instance.check === true\n    );\n\n    let itemCount = checkedInstances.reduce(\n        (total, checkedInstance) => total + checkedInstance.quantity,\n        0\n    );\n    let total = checkedInstances\n        .reduce(\n            (total, checkedInstance) =>\n                total + checkedInstance.item.price * checkedInstance.quantity,\n            0\n        )\n        .toFixed(2);\n    console.log('itemCount in sunItems: ', itemCount);\n    return { itemCount, total };\n};\nconst ChgChk = (parmscheck, parmsid, parmsuser, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_chkchg_post', {\n        method: 'post',\n        body: JSON.stringify({\n            check: parmscheck,\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            fnins(result.data);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = result.data ? result.data.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n            var { itemCount, total } = sumItems(result.data);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\nconst DeleteIns = (parmsid, parmsuser, ins_cart, fnins, fnlen, fnc, fnt) => {\n    return fetch('/api/user_deleteins_post', {\n        method: 'post',\n        body: JSON.stringify({\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then(() => {\n            var index = ins_cart.findIndex(\n                (oldins) => oldins._id === parmsid._id\n            );\n\n            ins_cart.splice(index, 1);\n\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart ? ins_cart.reduce(reducer, 0) : 0;\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst ChangeAddCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_changeAddcart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins = result.data;\n\n            var index = ins_cart.findIndex(\n                (oldins) => oldins._id === newins._id\n            );\n\n            ins_cart.splice(index, 1, newins);\n\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst ChangeToCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    ins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_changetocart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            instanceid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            // result is newins\n            var newins = result.data;\n            var index = ins_cart.findIndex(\n                (oldins) => oldins._id === newins._id\n            );\n            ins_cart.splice(index, 1, newins);\n            fnins(ins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = ins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(ins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\nconst checkdb = () => {\n    return fetch('/api/del_carts_all')\n        .then(console.log('delete success in function'))\n        .catch((err) => new Error(err));\n};\nconst GetAllCarts = (parmsuser, fnins, fnlen, fnc, fnt) => {\n    if (!parmsuser) return Promise.reject('no user');\n    return fetch('/api/user_getallcart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins_cart = result.data;\n            fnins(newins_cart);\n\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = newins_cart ? newins_cart.reduce(reducer, 0) : 0;\n\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(newins_cart);\n            fnc(itemCount);\n            fnt(total);\n            console.log('count: ', itemCount);\n            console.log('total: ', total);\n        })\n        .catch(new Error());\n};\n\nconst AddToCart = (\n    parmscount,\n    parmsid,\n    parmsuser,\n    oldins_cart,\n    fnins,\n    fnlen,\n    fnc,\n    fnt\n) => {\n    return fetch('/api/user_addtocart_post', {\n        method: 'post',\n        body: JSON.stringify({\n            count: parmscount,\n            itemid: parmsid,\n            user: parmsuser,\n        }),\n    })\n        .then((response) => response.json())\n        .then((result) => {\n            var newins = result.data;\n            // now the result is new iteminstance\n            var newins_cart = oldins_cart.filter(\n                (oldins) => oldins._id !== newins._id\n            );\n            newins_cart.unshift(newins);\n\n            fnins(newins_cart);\n            console.log('newins_cart: ', newins_cart);\n            const reducer = (accumulator, currentValue) =>\n                accumulator + currentValue.quantity;\n            var inslen = newins_cart.reduce(reducer, 0);\n            fnlen(inslen);\n\n            var { itemCount, total } = sumItems(newins_cart);\n            fnc(itemCount);\n            fnt(total);\n        })\n        .catch(new Error());\n};\n\nconst FunctionContextProvider = ({ children }) => {\n    return (\n        <FunctionContext.Provider\n            value={{\n                GetAllCarts,\n                AddToCart,\n                checkdb,\n                ChangeToCart,\n                ChangeAddCart,\n                DeleteIns,\n                ChgChk,\n                checkOut,\n                GetAllOrder,\n                PostComment,\n            }}\n        >\n            {children}\n        </FunctionContext.Provider>\n    );\n};\n\nexport const usefunctions = () => useContext(FunctionContext);\nexport default FunctionContextProvider;\n"]},"metadata":{},"sourceType":"module"}