{"ast":null,"code":"import ItemInstance from '../../models/iteminstance';\nimport User1 from '../../models/user';\nimport Item from '../../models/item';\nimport dbConnect from '../../utils/dbConnect';\nimport mongoose from 'mongoose';\nvar Schema = mongoose.Schema;\nexport const config = {\n  api: {\n    externalResolver: true\n  }\n};\nexport default async function handler(req, res) {\n  //req.body = JSON.parse(req.body);\n  console.log('req.body: ', req.body);\n  await dbConnect();\n  /* var iteminstance = new ItemInstance({\n      item: '5fe00ed13f144c7e71c5e1e7',\n      user: 'asdfghjk',\n      status: 'Cart',\n      quantity: 99,\n  });*/\n  // ItemInstance.paths;\n\n  console.log('path: ', ItemInstance.paths); // ItemInstance.add({ ordernumber: String });\n  //  const TurboManSchema = new Schema();\n  // You can also `add()` another schema and copy over all paths, virtuals,\n  // getters, setters, indexes, methods, and statics.\n  //  TurboManSchema.add(ToySchema).add({ year: Number });\n\n  /*\n  Item.findOneAndUpdate(\n      { title: 'baby clothes' },\n      {\n          image: ['/item/waranya-mooldee-Efj0HGPdPKs-unsplash.jpg'],\n      }\n  )\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});\n  */\n\n  /*\n      _id: 5fe00d8c2a5dd37d39833429, -> 'Potted plant' c\n      title: 'balloon',\n       _id: 5fe00def3f144c7e71c5e1e0, -> 'Cone IceCream' c\n  title: 'ice cream',\n   _id: 5fe00e0f3f144c7e71c5e1e1,\n  title: 'Potted plant'\n   _id: 5fe00e353f144c7e71c5e1e2, -> 'baby clothes'c\n  title: 'Cone IceCream',\n   _id: 5fe00e5f3f144c7e71c5e1e3, -> 'fox pet' c\n  title: 'baby clothes',\n    _id: 5fe00e7a3f144c7e71c5e1e4, -> 'snacks' c\n  title: 'fox pet',\n   _id: 5fe00e913f144c7e71c5e1e5, -> 'balloon' c\n  title: 'snacks',\n   _id: 5fe00eb93f144c7e71c5e1e6,\n  title: 'Ice cream in a bowl',\n   _id: 5fe00ed13f144c7e71c5e1e7, -> \"lemon\"\n  title: 'rabbit',\n  /*\n  Item.findByIdAndUpdate('5fe00def3f144c7e71c5e1e0', {\n      image: ['/item/faria-anzum-ONK9IlKizS4-unsplash.jpg'],\n  })\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});\n   Item.findByIdAndUpdate('5fe00e0f3f144c7e71c5e1e1', {\n      image: ['/item/ian-dooley-TLD6iCOlyb0-unsplash.jpg'],\n  })\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});\n   Item.findByIdAndUpdate('5fe00e353f144c7e71c5e1e2', {\n      image: ['/item/jelleke-vanooteghem-wzOyUkuLy7E-unsplash.jpg'],\n  })\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});\n   Item.findByIdAndUpdate('5fe00e5f3f144c7e71c5e1e3', {\n      image: ['/item/jonatan-pie-xgTMSz6kegE-unsplash.jpg'],\n  })\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});\n   Item.findByIdAndUpdate('5fe00e7a3f144c7e71c5e1e4', {\n      image: ['/item/michelle-tsang-VTt_Jn1LrOg-unsplash.jpg'],\n  })\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});\n   Item.findByIdAndUpdate('5fe00eb93f144c7e71c5e1e6', {\n      image: [\n          '/item/sheri-silver-5A0O12BIsjY-unsplash.jpg',\n          '/item/waranya-mooldee-Efj0HGPdPKs-unsplash.jpg',\n          '/item/lemon.jpg',\n          '/item/lemon2.jpg',\n          '/item/lemon3.jpg',\n      ],\n  })\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});\n   Item.findByIdAndUpdate('5fe00ed13f144c7e71c5e1e7', {\n      image: ['/item/lemon.jpg', '/item/lemon2.jpg', '/item/lemon3.jpg'],\n  })\n      .then((item) => {\n          console.log('result after update  item: ', item);\n      })\n      .catch((err) => {});*/\n\n  /* User1.findOneAndUpdate(\n      { email: 'jiu.hong.sun@gmail.co' },\n      { username: 'redbird' }\n  ).then((users) => console.log('users: ', users));*/\n\n  /* User1.deleteMany({ email: 'jiu.hong.sun@gmail.com' })\n      .then((res) => console.log('res: ', res))\n      .catch((err) => console.log('err: ', err));*/\n  // ItemInstance.find().then((result) => console.log('result: ', result));\n} //\n\n/*  const a = new Promise((res, rej) => {\n        iteminstance.save(function (error, new_item) {\n            new_item.populate('item', function (err, newitemafterpopulate) {\n                console.log('new_item: ', newitemafterpopulate);\n                return res(newitemafterpopulate);\n            });\n        });\n    });\n    a.then((res) => console.log('I am in test: ', res)).catch((err) =>\n        console.log(err)\n    // iteminstance.save((error, new_item) => new_item.populate());\n    /*.then((result) => {\n            //items = JSON.parse(JSON.stringify(res));\n            console.log('res: ', result);\n            res.status(201).json({ data: result });\n            res.end();\n        })\n        .catch((err) => {\n            console.log('err: ', err);\n\n            res.status(500).json({ error: err });\n            res.end();\n        });*/\n//var cutoff = new Date();\n//cutoff.setDate(cutoff.getDate() - 5);\n\n/*  ItemInstance.findByIdAndUpdate('5fed3a5af2807ffa54f7e2f5', {\n        commenttext: '444555',\n        commentimage: [\n            'uploadsnew/waranya-mooldee-Efj0HGPdPKs-unsplash.jpg',\n            'dsnew/waranya-mooldee-Efj0HGPdPKs-',\n        ],\n    })\n        .populate('item')\n        .then((result) => {\n            //items = JSON.parse(JSON.stringify(res));\n            console.log('res: ', result);\n            res.status(201).json({ data: result });\n            res.end();\n        })\n        .catch((err) => {\n            console.log('err: ', err);\n\n            res.status(500).json({ error: err });\n            res.end();\n        });*/\n\n/*\n  ItemInstance.deleteMany({ status: 'Cart', item: '1' })\n    .then(console.log('delete success'))\n    .catch((err) => {\n      res.status(500).json({ error: err });\n      res.end();\n    });*/","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/api/del_carts_all.js"],"names":["ItemInstance","User1","Item","dbConnect","mongoose","Schema","config","api","externalResolver","handler","req","res","console","log","body","paths"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AACA,OAAO,MAAMC,MAAM,GAAG;AAClBC,EAAAA,GAAG,EAAE;AACDC,IAAAA,gBAAgB,EAAE;AADjB;AADa,CAAf;AAMP,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,GAAG,CAACI,IAA9B;AACA,QAAMX,SAAS,EAAf;AAEA;AACJ;AACA;AACA;AACA;AACA;AACI;;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBb,YAAY,CAACe,KAAnC,EAZ4C,CAa5C;AAEA;AACA;AACA;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAqBI;AACJ;AACA;AACA;;AACI;AACJ;AACA;AACI;AACH,C,CAED;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ItemInstance from '../../models/iteminstance';\nimport User1 from '../../models/user';\nimport Item from '../../models/item';\nimport dbConnect from '../../utils/dbConnect';\nimport mongoose from 'mongoose';\n\nvar Schema = mongoose.Schema;\nexport const config = {\n    api: {\n        externalResolver: true,\n    },\n};\n\nexport default async function handler(req, res) {\n    //req.body = JSON.parse(req.body);\n    console.log('req.body: ', req.body);\n    await dbConnect();\n\n    /* var iteminstance = new ItemInstance({\n        item: '5fe00ed13f144c7e71c5e1e7',\n        user: 'asdfghjk',\n        status: 'Cart',\n        quantity: 99,\n    });*/\n    // ItemInstance.paths;\n    console.log('path: ', ItemInstance.paths);\n    // ItemInstance.add({ ordernumber: String });\n\n    //  const TurboManSchema = new Schema();\n    // You can also `add()` another schema and copy over all paths, virtuals,\n    // getters, setters, indexes, methods, and statics.\n    //  TurboManSchema.add(ToySchema).add({ year: Number });\n    /*\n    Item.findOneAndUpdate(\n        { title: 'baby clothes' },\n        {\n            image: ['/item/waranya-mooldee-Efj0HGPdPKs-unsplash.jpg'],\n        }\n    )\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});\n*/\n    /*\n        _id: 5fe00d8c2a5dd37d39833429, -> 'Potted plant' c\n        title: 'balloon',\n\n        _id: 5fe00def3f144c7e71c5e1e0, -> 'Cone IceCream' c\n    title: 'ice cream',\n\n    _id: 5fe00e0f3f144c7e71c5e1e1,\n    title: 'Potted plant'\n\n    _id: 5fe00e353f144c7e71c5e1e2, -> 'baby clothes'c\n    title: 'Cone IceCream',\n\n    _id: 5fe00e5f3f144c7e71c5e1e3, -> 'fox pet' c\n    title: 'baby clothes',\n\n\n    _id: 5fe00e7a3f144c7e71c5e1e4, -> 'snacks' c\n    title: 'fox pet',\n\n    _id: 5fe00e913f144c7e71c5e1e5, -> 'balloon' c\n    title: 'snacks',\n\n    _id: 5fe00eb93f144c7e71c5e1e6,\n    title: 'Ice cream in a bowl',\n\n    _id: 5fe00ed13f144c7e71c5e1e7, -> \"lemon\"\n    title: 'rabbit',\n\n\n\n\n/*\n    Item.findByIdAndUpdate('5fe00def3f144c7e71c5e1e0', {\n        image: ['/item/faria-anzum-ONK9IlKizS4-unsplash.jpg'],\n    })\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});\n\n    Item.findByIdAndUpdate('5fe00e0f3f144c7e71c5e1e1', {\n        image: ['/item/ian-dooley-TLD6iCOlyb0-unsplash.jpg'],\n    })\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});\n\n    Item.findByIdAndUpdate('5fe00e353f144c7e71c5e1e2', {\n        image: ['/item/jelleke-vanooteghem-wzOyUkuLy7E-unsplash.jpg'],\n    })\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});\n\n    Item.findByIdAndUpdate('5fe00e5f3f144c7e71c5e1e3', {\n        image: ['/item/jonatan-pie-xgTMSz6kegE-unsplash.jpg'],\n    })\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});\n\n    Item.findByIdAndUpdate('5fe00e7a3f144c7e71c5e1e4', {\n        image: ['/item/michelle-tsang-VTt_Jn1LrOg-unsplash.jpg'],\n    })\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});\n\n    Item.findByIdAndUpdate('5fe00eb93f144c7e71c5e1e6', {\n        image: [\n            '/item/sheri-silver-5A0O12BIsjY-unsplash.jpg',\n            '/item/waranya-mooldee-Efj0HGPdPKs-unsplash.jpg',\n            '/item/lemon.jpg',\n            '/item/lemon2.jpg',\n            '/item/lemon3.jpg',\n        ],\n    })\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});\n\n    Item.findByIdAndUpdate('5fe00ed13f144c7e71c5e1e7', {\n        image: ['/item/lemon.jpg', '/item/lemon2.jpg', '/item/lemon3.jpg'],\n    })\n        .then((item) => {\n            console.log('result after update  item: ', item);\n        })\n        .catch((err) => {});*/\n\n    /* User1.findOneAndUpdate(\n        { email: 'jiu.hong.sun@gmail.co' },\n        { username: 'redbird' }\n    ).then((users) => console.log('users: ', users));*/\n    /* User1.deleteMany({ email: 'jiu.hong.sun@gmail.com' })\n        .then((res) => console.log('res: ', res))\n        .catch((err) => console.log('err: ', err));*/\n    // ItemInstance.find().then((result) => console.log('result: ', result));\n}\n\n//\n/*  const a = new Promise((res, rej) => {\n        iteminstance.save(function (error, new_item) {\n            new_item.populate('item', function (err, newitemafterpopulate) {\n                console.log('new_item: ', newitemafterpopulate);\n                return res(newitemafterpopulate);\n            });\n        });\n    });\n    a.then((res) => console.log('I am in test: ', res)).catch((err) =>\n        console.log(err)\n    // iteminstance.save((error, new_item) => new_item.populate());\n    /*.then((result) => {\n            //items = JSON.parse(JSON.stringify(res));\n            console.log('res: ', result);\n            res.status(201).json({ data: result });\n            res.end();\n        })\n        .catch((err) => {\n            console.log('err: ', err);\n\n            res.status(500).json({ error: err });\n            res.end();\n        });*/\n\n//var cutoff = new Date();\n//cutoff.setDate(cutoff.getDate() - 5);\n/*  ItemInstance.findByIdAndUpdate('5fed3a5af2807ffa54f7e2f5', {\n        commenttext: '444555',\n        commentimage: [\n            'uploadsnew/waranya-mooldee-Efj0HGPdPKs-unsplash.jpg',\n            'dsnew/waranya-mooldee-Efj0HGPdPKs-',\n        ],\n    })\n        .populate('item')\n        .then((result) => {\n            //items = JSON.parse(JSON.stringify(res));\n            console.log('res: ', result);\n            res.status(201).json({ data: result });\n            res.end();\n        })\n        .catch((err) => {\n            console.log('err: ', err);\n\n            res.status(500).json({ error: err });\n            res.end();\n        });*/\n/*\n  ItemInstance.deleteMany({ status: 'Cart', item: '1' })\n    .then(console.log('delete success'))\n    .catch((err) => {\n      res.status(500).json({ error: err });\n      res.end();\n    });*/\n"]},"metadata":{},"sourceType":"module"}