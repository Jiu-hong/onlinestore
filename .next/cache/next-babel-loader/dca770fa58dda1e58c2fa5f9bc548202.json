{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/components/itemsInIndex.js\";\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useEffect, useState, useRef } from 'react';\nimport { useInsDispatch, useIns } from '../pages/contexts/CartContext';\nimport { useUser } from '../pages/contexts/userContext';\nimport { usefunctions } from '../pages/contexts/functionContext';\nimport { formatNumber } from '../utils/utils';\nimport styles from '../styles/index.module.css';\nexport default function ItemsInIndex({\n  item\n}) {\n  //const { dispatch } = useInsDispatch();\n  const {\n    AddToCart\n  } = usefunctions();\n  const {\n    0: busy,\n    1: setBusy\n  } = useState(false);\n  const {\n    0: mgvisible,\n    1: setMgvisible\n  } = useState(false);\n  const {\n    0: inscount,\n    1: setInscount\n  } = useState('');\n  const divEL = useRef(null);\n  const {\n    setInstances,\n    setInsLen,\n    setItemCount,\n    setTotal\n  } = useInsDispatch();\n  const {\n    itemCount,\n    total,\n    instances\n  } = useIns();\n  useEffect(() => {\n    instances === null || instances === void 0 ? void 0 : instances.find(instance => {\n      if (instance.item._id === item._id) {\n        setInscount(instance.quantity);\n      }\n    });\n  }, [instances]);\n  const {\n    user,\n    tmpuser\n  } = useUser();\n  var usr = user || tmpuser;\n\n  const handleIncrease = e => {\n    if (divEL.current) {\n      setBusy(true);\n    }\n\n    AddToCart(1, item._id, usr, setInstances, setInsLen, setItemCount, setTotal).then(() => {\n      if (divEL.current) {\n        setBusy(false);\n        setMgvisible(e);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: divEL,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-body\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/store/[id]\",\n          as: `/store/${item._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              src: item.image[0],\n              height: 300,\n              width: 300\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"item-name\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-left\",\n          children: formatNumber(item.price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.addline,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: mgvisible === item ? styles.show : styles.hidden,\n            children: \"\\u2713 added\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), inscount && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [inscount, \" in cart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleIncrease(item),\n            className: \"btn btn-success\",\n            disabled: busy,\n            children: \"Add To Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/components/itemsInIndex.js"],"names":["Link","Image","useEffect","useState","useRef","useInsDispatch","useIns","useUser","usefunctions","formatNumber","styles","ItemsInIndex","item","AddToCart","busy","setBusy","mgvisible","setMgvisible","inscount","setInscount","divEL","setInstances","setInsLen","setItemCount","setTotal","itemCount","total","instances","find","instance","_id","quantity","user","tmpuser","usr","handleIncrease","e","current","then","image","title","price","addline","show","hidden"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport Image from 'next/image';\nimport { useEffect, useState, useRef } from 'react';\nimport { useInsDispatch, useIns } from '../pages/contexts/CartContext';\nimport { useUser } from '../pages/contexts/userContext';\nimport { usefunctions } from '../pages/contexts/functionContext';\nimport { formatNumber } from '../utils/utils';\nimport styles from '../styles/index.module.css';\n\nexport default function ItemsInIndex({ item }) {\n    //const { dispatch } = useInsDispatch();\n    const { AddToCart } = usefunctions();\n    const [busy, setBusy] = useState(false);\n    const [mgvisible, setMgvisible] = useState(false);\n    const [inscount, setInscount] = useState('');\n    const divEL = useRef(null);\n\n    const {\n        setInstances,\n        setInsLen,\n        setItemCount,\n        setTotal,\n    } = useInsDispatch();\n    const { itemCount, total, instances } = useIns();\n\n    useEffect(() => {\n        instances?.find((instance) => {\n            if (instance.item._id === item._id) {\n                setInscount(instance.quantity);\n            }\n        });\n    }, [instances]);\n    const { user, tmpuser } = useUser();\n    var usr = user || tmpuser;\n    const handleIncrease = (e) => {\n        if (divEL.current) {\n            setBusy(true);\n        }\n        AddToCart(\n            1,\n            item._id,\n            usr,\n\n            setInstances,\n            setInsLen,\n            setItemCount,\n            setTotal\n        ).then(() => {\n            if (divEL.current) {\n                setBusy(false);\n                setMgvisible(e);\n            }\n        });\n    };\n\n    return (\n        <>\n            <div key={item._id} ref={divEL}>\n                <div className=\"card card-body\">\n                    <Link href=\"/store/[id]\" as={`/store/${item._id}`}>\n                        <a>\n                            <Image\n                                src={item.image[0]}\n                                height={300}\n                                width={300}\n                            />\n                            <p className=\"item-name\">{item.title}</p>\n                        </a>\n                    </Link>\n\n                    <p className=\"text-left\">{formatNumber(item.price)}</p>\n\n                    <div className={styles.addline}>\n                        <span\n                            className={\n                                mgvisible === item ? styles.show : styles.hidden\n                            }\n                        >\n                            ✓ added\n                        </span>\n                        {inscount && <div>{inscount} in cart</div>}\n                        <button\n                            onClick={() => handleIncrease(item)}\n                            className=\"btn btn-success\"\n                            disabled={busy}\n                        >\n                            Add To Cart\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}