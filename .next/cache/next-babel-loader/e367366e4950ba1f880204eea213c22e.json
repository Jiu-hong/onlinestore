{"ast":null,"code":"import mongoose from 'mongoose';\n\nconst {\n  DateTime\n} = require('luxon'); //for date handling\n\n\nvar Schema = mongoose.Schema;\nvar ItemInstanceSchema = new Schema({\n  item: {\n    type: Schema.ObjectId,\n    ref: 'Item',\n    required: true\n  },\n  // Reference to the associated item.\n  user: {\n    type: Schema.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  // Reference to the associated user.\n  //imprint: { type: String, required: true },\n  status: {\n    type: String,\n    required: true,\n    enum: ['Cart', 'Buy'],\n    default: 'Cart'\n  },\n  quantity: {\n    type: Number,\n    required: true\n  },\n  check: {\n    type: Boolean,\n    default: true\n  },\n  buy_date: {\n    type: Date,\n    default: Date.now\n  },\n  order: {\n    type: String\n  }\n}); // Virtual for this iteminstance object's URL.\n\nItemInstanceSchema.virtual('url').get(function () {\n  return '/auth/iteminstance/' + this._id;\n});\nItemInstanceSchema.virtual('buy_date_formatted').get(function () {\n  return DateTime.fromJSDate(this.buy_date).toLocaleString(DateTime.DATE_MED);\n});\nItemInstanceSchema.virtual('buy_date_yyyy_mm_dd').get(function () {\n  return DateTime.fromJSDate(this.buy_date).toISODate(); //format 'YYYY-MM-DD'\n}); // Export model.\n\nexport default mongoose.models.ItemInstance || mongoose.model('ItemInstance', ItemInstanceSchema);","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/models/iteminstance.js"],"names":["mongoose","DateTime","require","Schema","ItemInstanceSchema","item","type","ObjectId","ref","required","user","status","String","enum","default","quantity","Number","check","Boolean","buy_date","Date","now","order","virtual","get","_id","fromJSDate","toLocaleString","DATE_MED","toISODate","models","ItemInstance","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAeC,OAAO,CAAC,OAAD,CAA5B,C,CAAuC;;;AAEvC,IAAIC,MAAM,GAAGH,QAAQ,CAACG,MAAtB;AAEA,IAAIC,kBAAkB,GAAG,IAAID,MAAJ,CAAW;AAClCE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEH,MAAM,CAACI,QAAf;AAAyBC,IAAAA,GAAG,EAAE,MAA9B;AAAsCC,IAAAA,QAAQ,EAAE;AAAhD,GAD4B;AAC4B;AAC9DC,EAAAA,IAAI,EAAE;AAAEJ,IAAAA,IAAI,EAAEH,MAAM,CAACI,QAAf;AAAyBC,IAAAA,GAAG,EAAE,MAA9B;AAAsCC,IAAAA,QAAQ,EAAE;AAAhD,GAF4B;AAE4B;AAC9D;AACAE,EAAAA,MAAM,EAAE;AACNL,IAAAA,IAAI,EAAEM,MADA;AAENH,IAAAA,QAAQ,EAAE,IAFJ;AAGNI,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,CAHA;AAINC,IAAAA,OAAO,EAAE;AAJH,GAJ0B;AAUlCC,EAAAA,QAAQ,EAAE;AAAET,IAAAA,IAAI,EAAEU,MAAR;AAAgBP,IAAAA,QAAQ,EAAE;AAA1B,GAVwB;AAWlCQ,EAAAA,KAAK,EAAE;AAAEX,IAAAA,IAAI,EAAEY,OAAR;AAAiBJ,IAAAA,OAAO,EAAE;AAA1B,GAX2B;AAYlCK,EAAAA,QAAQ,EAAE;AAAEb,IAAAA,IAAI,EAAEc,IAAR;AAAcN,IAAAA,OAAO,EAAEM,IAAI,CAACC;AAA5B,GAZwB;AAalCC,EAAAA,KAAK,EAAE;AAAEhB,IAAAA,IAAI,EAAEM;AAAR;AAb2B,CAAX,CAAzB,C,CAgBA;;AACAR,kBAAkB,CAACmB,OAAnB,CAA2B,KAA3B,EAAkCC,GAAlC,CAAsC,YAAY;AAChD,SAAO,wBAAwB,KAAKC,GAApC;AACD,CAFD;AAIArB,kBAAkB,CAACmB,OAAnB,CAA2B,oBAA3B,EAAiDC,GAAjD,CAAqD,YAAY;AAC/D,SAAOvB,QAAQ,CAACyB,UAAT,CAAoB,KAAKP,QAAzB,EAAmCQ,cAAnC,CAAkD1B,QAAQ,CAAC2B,QAA3D,CAAP;AACD,CAFD;AAIAxB,kBAAkB,CAACmB,OAAnB,CAA2B,qBAA3B,EAAkDC,GAAlD,CAAsD,YAAY;AAChE,SAAOvB,QAAQ,CAACyB,UAAT,CAAoB,KAAKP,QAAzB,EAAmCU,SAAnC,EAAP,CADgE,CACT;AACxD,CAFD,E,CAIA;;AACA,eAAe7B,QAAQ,CAAC8B,MAAT,CAAgBC,YAAhB,IACb/B,QAAQ,CAACgC,KAAT,CAAe,cAAf,EAA+B5B,kBAA/B,CADF","sourcesContent":["import mongoose from 'mongoose';\nconst { DateTime } = require('luxon'); //for date handling\n\nvar Schema = mongoose.Schema;\n\nvar ItemInstanceSchema = new Schema({\n  item: { type: Schema.ObjectId, ref: 'Item', required: true }, // Reference to the associated item.\n  user: { type: Schema.ObjectId, ref: 'User', required: true }, // Reference to the associated user.\n  //imprint: { type: String, required: true },\n  status: {\n    type: String,\n    required: true,\n    enum: ['Cart', 'Buy'],\n    default: 'Cart',\n  },\n  quantity: { type: Number, required: true },\n  check: { type: Boolean, default: true },\n  buy_date: { type: Date, default: Date.now },\n  order: { type: String },\n});\n\n// Virtual for this iteminstance object's URL.\nItemInstanceSchema.virtual('url').get(function () {\n  return '/auth/iteminstance/' + this._id;\n});\n\nItemInstanceSchema.virtual('buy_date_formatted').get(function () {\n  return DateTime.fromJSDate(this.buy_date).toLocaleString(DateTime.DATE_MED);\n});\n\nItemInstanceSchema.virtual('buy_date_yyyy_mm_dd').get(function () {\n  return DateTime.fromJSDate(this.buy_date).toISODate(); //format 'YYYY-MM-DD'\n});\n\n// Export model.\nexport default mongoose.models.ItemInstance ||\n  mongoose.model('ItemInstance', ItemInstanceSchema);\n"]},"metadata":{},"sourceType":"module"}