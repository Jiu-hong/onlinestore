{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport '../styles/globals.css';\nimport Item from '../models/Item';\nimport dbConnect from '../utils/dbConnect';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      items = _ref.items;\n  console.log('items: ', items);\n  console.log('pageProps: ', pageProps);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, items), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var result, items;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return dbConnect();\n\n          case 2:\n            _context.next = 4;\n            return Item.find({});\n\n          case 4:\n            result = _context.sent;\n            items = JSON.parse(JSON.stringify(result));\n            console.log('items in MyApp.getInitialProps: ', items);\n            return _context.abrupt(\"return\", _objectSpread({}, items));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n/*\nexport async function getStaticProps() {\n  //export async function getServerSideProps() {\n  await dbConnect();\n\n  /* find all the data in our database \n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n\n  return { props: { pageProps: items } };\n}\n*/\n\n\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/_app.js"],"names":["Item","dbConnect","MyApp","Component","items","console","log","pageProps","getInitialProps","appContext","find","result","JSON","parse","stringify"],"mappings":";;;;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,SAASC,KAAT,OAAqC;AAAA,MAApBC,SAAoB,QAApBA,SAAoB;AAAA,MAATC,KAAS,QAATA,KAAS;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,SAA3B;AACA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD,C,CAED;AACA;AACA;AACA;;;KAfSF,K;;AAiBTA,KAAK,CAACM,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGhBR,SAAS,EAHO;;AAAA;AAAA;AAAA,mBAKDD,IAAI,CAACU,IAAL,CAAU,EAAV,CALC;;AAAA;AAKhBC,YAAAA,MALgB;AAMhBP,YAAAA,KANgB,GAMRQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,MAAf,CAAX,CANQ;AAOtBN,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,KAAhD;AAPsB,+DAQVA,KARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeF,KAAf","sourcesContent":["import '../styles/globals.css';\nimport Item from '../models/Item';\nimport dbConnect from '../utils/dbConnect';\n\nfunction MyApp({ Component, items }) {\n  console.log('items: ', items);\n  console.log('pageProps: ', pageProps);\n  return (\n    <>\n      <div className='grid wrapper'>\n        <Component {...items} />\n      </div>\n    </>\n  );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\nMyApp.getInitialProps = async (appContext) => {\n  //calls page's `getInitialProps` and fills `appProps.pageProps`\n  //const appProps = await App.getInitialProps(appContext);\n  await dbConnect();\n\n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n  console.log('items in MyApp.getInitialProps: ', items);\n  return { ...items };\n};\n/*\nexport async function getStaticProps() {\n  //export async function getServerSideProps() {\n  await dbConnect();\n\n  /* find all the data in our database \n  const result = await Item.find({});\n  const items = JSON.parse(JSON.stringify(result));\n\n  return { props: { pageProps: items } };\n}\n*/\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}