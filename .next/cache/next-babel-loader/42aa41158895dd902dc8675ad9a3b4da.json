{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/cart/tocheckout.js\";\nimport { useEffect } from 'react';\nimport Link from 'next/link';\nimport Layout from '../../components/layout';\nimport ToChkInstances from '../../components/ToChkInstances';\nimport { useUserDispatch, useUser } from '../contexts/userContext';\nimport { useIns, useInsDispatch } from '../contexts/CartContext';\nimport { usefunctions } from '../contexts/functionContext'; //import { useInitial, useInitialDispatch } from './contexts/initialContext';\n\nimport { formatNumber } from '../../utils/utils';\nexport default function ToCheckOut() {\n  var temp;\n  const user = useUser();\n  const setUser = useUserDispatch();\n  const {\n    instances,\n    itemCount,\n    total\n  } = useIns();\n  const {\n    setInstance,\n    setInsLen,\n    setItemCount,\n    setTotal\n  } = useInsDispatch();\n  const {\n    GetAllCarts,\n    checkdb,\n    checkOut\n  } = usefunctions();\n\n  const handleChkOut = () => {\n    checkOut(user, setInstance, setInsLen, setItemCount, setTotal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [instances && instances.filter(instance => instance.check === true).map(checkedins => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [\"You are going to check out:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ToChkInstances, {\n          checkedins: checkedins\n        }, checkedins._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr-3\",\n            children: [\"Total count: \", itemCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mr-3\",\n            children: [\"Total price: \", formatNumber(total)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: handleChkOut,\n            children: [' ', \"Confirm\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this);\n    }), !instances.filter(instance => instance.check === true) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No product to check out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), (!instances || instances.length == 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No product to check out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/jiuhong8201/Desktop/HTML-CSS-JS-learning/A_Real_Project/my-next/pages/cart/tocheckout.js"],"names":["useEffect","Link","Layout","ToChkInstances","useUserDispatch","useUser","useIns","useInsDispatch","usefunctions","formatNumber","ToCheckOut","temp","user","setUser","instances","itemCount","total","setInstance","setInsLen","setItemCount","setTotal","GetAllCarts","checkdb","checkOut","handleChkOut","filter","instance","check","map","checkedins","_id","length"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,yBAAzC;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,yBAAvC;AACA,SAASC,YAAT,QAA6B,6BAA7B,C,CACA;;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,eAAe,SAASC,UAAT,GAAsB;AACjC,MAAIC,IAAJ;AACA,QAAMC,IAAI,GAAGP,OAAO,EAApB;AACA,QAAMQ,OAAO,GAAGT,eAAe,EAA/B;AAEA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,MAAkCV,MAAM,EAA9C;AACA,QAAM;AAAEW,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA;AAAxC,MAAqDb,cAAc,EAAzE;AACA,QAAM;AAAEc,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAqCf,YAAY,EAAvD;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAACX,IAAD,EAAOK,WAAP,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,QAA7C,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,MAAD;AAAA,eACKN,SAAS,IACNA,SAAS,CACJW,MADL,CACaC,QAAD,IAAcA,QAAQ,CAACC,KAAT,KAAmB,IAD7C,EAEKC,GAFL,CAEUC,UAAD,IAAgB;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,EAAf;AAAA,oDACgC,GADhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,cAAD;AACI,UAAA,UAAU,EAAEA;AADhB,WAESA,UAAU,CAACC,GAFpB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAQI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,wCACkBf,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,wCACkBN,YAAY,CAACO,KAAD,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AACI,YAAA,SAAS,EAAC,iBADd;AAEI,YAAA,OAAO,EAAEQ,YAFb;AAAA,uBAIK,GAJL,aAKY,GALZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AA0BH,KA7BL,CAFR,EAgCK,CAACV,SAAS,CAACW,MAAV,CAAkBC,QAAD,IAAcA,QAAQ,CAACC,KAAT,KAAmB,IAAlD,CAAD,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCR,EAmCK,CAAC,CAACb,SAAD,IAAcA,SAAS,CAACiB,MAAV,IAAoB,CAAnC,kBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH","sourcesContent":["import { useEffect } from 'react'\nimport Link from 'next/link'\nimport Layout from '../../components/layout'\nimport ToChkInstances from '../../components/ToChkInstances'\nimport { useUserDispatch, useUser } from '../contexts/userContext'\nimport { useIns, useInsDispatch } from '../contexts/CartContext'\nimport { usefunctions } from '../contexts/functionContext'\n//import { useInitial, useInitialDispatch } from './contexts/initialContext';\nimport { formatNumber } from '../../utils/utils'\n\nexport default function ToCheckOut() {\n    var temp\n    const user = useUser()\n    const setUser = useUserDispatch()\n\n    const { instances, itemCount, total } = useIns()\n    const { setInstance, setInsLen, setItemCount, setTotal } = useInsDispatch()\n    const { GetAllCarts, checkdb, checkOut } = usefunctions()\n\n    const handleChkOut = () => {\n        checkOut(user, setInstance, setInsLen, setItemCount, setTotal)\n    }\n\n    return (\n        <Layout>\n            {instances &&\n                instances\n                    .filter((instance) => instance.check === true)\n                    .map((checkedins) => {\n                        return (\n                            <div className=\"container\">\n                                <div className=\"\">\n                                    You are going to check out:{' '}\n                                </div>\n                                <ToChkInstances\n                                    checkedins={checkedins}\n                                    key={checkedins._id}\n                                />\n                                <div className=\"row\">\n                                    <div className=\"mr-3\">\n                                        Total count: {itemCount}\n                                    </div>\n                                    <div className=\"mr-3\">\n                                        Total price: {formatNumber(total)}\n                                    </div>\n                                    <button\n                                        className=\"btn btn-success\"\n                                        onClick={handleChkOut}\n                                    >\n                                        {' '}\n                                        Confirm{' '}\n                                    </button>\n                                </div>\n                            </div>\n                        )\n                    })}\n            {!instances.filter((instance) => instance.check === true) && (\n                <div>No product to check out</div>\n            )}\n            {(!instances || instances.length == 0) && (\n                <div>No product to check out</div>\n            )}\n        </Layout>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}